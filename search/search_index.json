{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u7b80\u4ecb \u2693\ufe0e \u6821\u961f\u81ea\u7528 Wiki\u3002 \u672c\u7f51\u9875\u90e8\u7f72\u4e8e GitHub Page\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4e00\u540c\u4fee\u6539\u3002 \u611f\u8c22 Cyent \u63d0\u4f9b\u7684 \u90e8\u7f72\u6559\u7a0b \u3002 \u5982\u679c\u60a8\u5bf9\u53c2\u4e0e\u7f16\u5199\u611f\u5174\u8da3\uff0c\u53ea\u9700\u70b9\u51fb\u6807\u9898\u53f3\u8fb9\u7684\u7f16\u8f91\u6309\u94ae \uff0c\u5373\u53ef\u7f16\u8f91\u3002 \u66f4\u8be6\u7ec6\u7684\u7f16\u5199\u6d41\u7a0b\u8bf7\u9605\u8bfb \u5982\u4f55\u53c2\u4e0e \u3002 \u2014\u2014 rogeryoungh","title":"\u7b80\u4ecb"},{"location":"#\u7b80\u4ecb","text":"\u6821\u961f\u81ea\u7528 Wiki\u3002 \u672c\u7f51\u9875\u90e8\u7f72\u4e8e GitHub Page\uff0c\u60a8\u4e5f\u53ef\u4ee5\u4e00\u540c\u4fee\u6539\u3002 \u611f\u8c22 Cyent \u63d0\u4f9b\u7684 \u90e8\u7f72\u6559\u7a0b \u3002 \u5982\u679c\u60a8\u5bf9\u53c2\u4e0e\u7f16\u5199\u611f\u5174\u8da3\uff0c\u53ea\u9700\u70b9\u51fb\u6807\u9898\u53f3\u8fb9\u7684\u7f16\u8f91\u6309\u94ae \uff0c\u5373\u53ef\u7f16\u8f91\u3002 \u66f4\u8be6\u7ec6\u7684\u7f16\u5199\u6d41\u7a0b\u8bf7\u9605\u8bfb \u5982\u4f55\u53c2\u4e0e \u3002 \u2014\u2014 rogeryoungh","title":"\u7b80\u4ecb"},{"location":"about/support/","text":"\u5982\u4f55\u53c2\u4e0e \u2693\ufe0e \u6b22\u8fce\u5927\u5bb6\u5bf9\u672c\u6587\u6863\u8fdb\u884c\u8d21\u732e\u3002 \u5305\u62ec\u4e14\u4e0d\u9650\u4e8e \u4fee\u6b63\u9519\u8bef\uff0c\u8865\u5145\u4ee3\u7801\u3002 \u6dfb\u52a0\u66f4\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002 \u589e\u52a0\u65b0\u60f3\u6cd5\u3002 \u8bf7\u60a8\u5728\u64b0\u7a3f\u6216\u8005\u4fee\u6b63\u4ee5\u524d\uff0c\u4ed4\u7ec6\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5b8c\u6210\u66f4\u9ad8\u8d28\u91cf\u7684\u5185\u5bb9\u3002 \u9700\u8981\u4e86\u89e3\u4e00\u4e9b Markdown \u7684\u77e5\u8bc6\uff0c\u8bf7\u67e5\u770b Markdown \u3002 \u6211\u4e4b\u524d\u6ca1\u600e\u4e48\u7528\u8fc7 GitHub \u2693\ufe0e \u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53d1\u6587\u672c\u7ed9\u6211\uff0c\u7531\u6211\u624b\u52a8\u5408\u5e76\uff0c\u4f46\u8fd9\u6837\u4f60\u5e76\u4e0d\u4f1a\u5f97\u5230 contribute\u3002 \u9996\u5148\u4f60\u9700\u8981\u6709\u4e00\u4e2a GitHub \u5e10\u53f7\uff0c\u4f46\u4e0d\u9700\u8981\u9ad8\u8d85\u7684 GitHub \u6280\u5de7\u3002 \u70b9\u51fb\u6807\u9898\u53f3\u8fb9\u7684\u7f16\u8f91\u6309\u94ae \uff0c\u5f00\u59cb\u7f16\u8f91\u3002 \u5728\u7f16\u8f91\u6846\u91cc\u8fdb\u884c\u4fee\u6539\u3002\u7531\u4e8e MkDocs \u652f\u6301\u4e00\u4e9b\u6269\u5c55 Markdown\uff0c\u5b83\u4e0d\u4e00\u5b9a\u80fd\u5728 GitHub \u7684\u9884\u89c8\u91cc\u5f88\u597d\u7684\u5c55\u793a\u3002 \u5199\u597d\u4e86\u4e4b\u540e\u70b9\u4e0b\u65b9\u7684\u7eff\u8272\u6309\u94ae Propose changes \u63d0\u4ea4\u4fee\u6539\u3002\u4f46\u662f\uff0cGitHub \u53ef\u80fd\u4f1a\u63d0\u793a\u4f60\u6ca1\u6709\u6743\u9650\u3002\u4e0d\u5fc5\u62c5\u5fc3\uff01GitHub \u4f1a\u81ea\u52a8\u5e2e\u4f60\u5c06 \u672c\u9879\u76ee \u7684\u6240\u6709\u6587\u4ef6\u590d\u5236\u4e00\u4efd\uff0c\u653e\u5230\u4f60\u7684\u4ed3\u5e93\u4e2d\uff08fork\uff09\u5e76\u521b\u5efa\u7533\u8bf7\u5408\u5e76\u66f4\u6539\u7684\u8bf7\u6c42 (Pull Request)\uff1b \u4e4b\u540e\uff0c\u70b9\u4e0a\u65b9\u7684\u7eff\u8272\u6309\u94ae (Create pull request) \u540e\uff0cGitHub \u4f1a\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684\u9875\u9762 Open a pull request\u3002\u5220\u6389\u65b9\u6846\u91cc\u7684\u6587\u5b57\uff0c\u7b80\u5355\u5199\u5199\u4f60\u505a\u7684\u4fee\u6539\uff0c\u7136\u540e\u518d\u70b9\u4e00\u4e0b\u4e0b\u9762\u7684\u7eff\u8272\u6309\u94ae (Create pull request)\uff1b \u4e0d\u51fa\u610f\u5916\u7684\u8bdd\uff0c\u4f60\u7684 PR \u5c31\u987a\u5229\u63d0\u4ea4\u5230\u4ed3\u5e93\uff0c\u7b49\u5f85\u5408\u5e76\u4e86\u3002\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u7b49\u5f85\u9879\u76ee\u7ec4\u5408\u5e76\u4f60\u7684\u5206\u652f\uff0c\u6216\u8005\u6307\u51fa\u8fd8\u8981\u4fee\u6539\u7684\u5730\u65b9\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4ed6\u4eba\u7684 PR \u63d0\u51fa\u4fee\u6539\u610f\u89c1\uff0c\u6216\u8005\u53ea\u662f\u70b9\u8d5e/\u8e29\u3002\u5982\u679c\u6709\u6d88\u606f\uff0c\u4f1a\u6709\u90ae\u4ef6\u901a\u77e5\u548c/\u6216\u51fa\u73b0\u5728\u7f51\u9875\u53f3\u4e0a\u89d2\u7684\u63d0\u9192\uff08\u53d6\u51b3\u4e8e\u4f60\u4e2a\u4eba Settings \u4e2d\u7684\u8bbe\u7f6e\uff09\u3002 \u5728\u4f60\u7684\u5206\u652f\u88ab\u5408\u5e76 (merge) \u5230\u4e3b\u5206\u652f (main) \u4e4b\u524d\uff0c\u4f60\u5bf9 \u672c\u9879\u76ee \u6240\u505a\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u51fa\u73b0\u5728\u9875\u9762\u4e0a\u3002\u6240\u4ee5\u8bf7\u4e0d\u7528\u62c5\u5fc3\u201c\u4f60\u7684\u7f16\u8f91\u4f1a\u7834\u574f\u7f51\u9875\u6b63\u5728\u663e\u793a\u7684\u9875\u9762\u201d\u4e00\u4e8b\u3002 \u6211\u4e4b\u524d\u7528\u8fc7 GitHub \u2693\ufe0e \u5927\u80c6\u5199\u5427\uff01","title":"\u5982\u4f55\u53c2\u4e0e"},{"location":"about/support/#\u5982\u4f55\u53c2\u4e0e","text":"\u6b22\u8fce\u5927\u5bb6\u5bf9\u672c\u6587\u6863\u8fdb\u884c\u8d21\u732e\u3002 \u5305\u62ec\u4e14\u4e0d\u9650\u4e8e \u4fee\u6b63\u9519\u8bef\uff0c\u8865\u5145\u4ee3\u7801\u3002 \u6dfb\u52a0\u66f4\u8be6\u7ec6\u7684\u63cf\u8ff0\u3002 \u589e\u52a0\u65b0\u60f3\u6cd5\u3002 \u8bf7\u60a8\u5728\u64b0\u7a3f\u6216\u8005\u4fee\u6b63\u4ee5\u524d\uff0c\u4ed4\u7ec6\u9605\u8bfb\u4ee5\u4e0b\u5185\u5bb9\uff0c\u4ee5\u5e2e\u52a9\u60a8\u5b8c\u6210\u66f4\u9ad8\u8d28\u91cf\u7684\u5185\u5bb9\u3002 \u9700\u8981\u4e86\u89e3\u4e00\u4e9b Markdown \u7684\u77e5\u8bc6\uff0c\u8bf7\u67e5\u770b Markdown \u3002","title":"\u5982\u4f55\u53c2\u4e0e"},{"location":"about/support/#\u6211\u4e4b\u524d\u6ca1\u600e\u4e48\u7528\u8fc7-github","text":"\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53d1\u6587\u672c\u7ed9\u6211\uff0c\u7531\u6211\u624b\u52a8\u5408\u5e76\uff0c\u4f46\u8fd9\u6837\u4f60\u5e76\u4e0d\u4f1a\u5f97\u5230 contribute\u3002 \u9996\u5148\u4f60\u9700\u8981\u6709\u4e00\u4e2a GitHub \u5e10\u53f7\uff0c\u4f46\u4e0d\u9700\u8981\u9ad8\u8d85\u7684 GitHub \u6280\u5de7\u3002 \u70b9\u51fb\u6807\u9898\u53f3\u8fb9\u7684\u7f16\u8f91\u6309\u94ae \uff0c\u5f00\u59cb\u7f16\u8f91\u3002 \u5728\u7f16\u8f91\u6846\u91cc\u8fdb\u884c\u4fee\u6539\u3002\u7531\u4e8e MkDocs \u652f\u6301\u4e00\u4e9b\u6269\u5c55 Markdown\uff0c\u5b83\u4e0d\u4e00\u5b9a\u80fd\u5728 GitHub \u7684\u9884\u89c8\u91cc\u5f88\u597d\u7684\u5c55\u793a\u3002 \u5199\u597d\u4e86\u4e4b\u540e\u70b9\u4e0b\u65b9\u7684\u7eff\u8272\u6309\u94ae Propose changes \u63d0\u4ea4\u4fee\u6539\u3002\u4f46\u662f\uff0cGitHub \u53ef\u80fd\u4f1a\u63d0\u793a\u4f60\u6ca1\u6709\u6743\u9650\u3002\u4e0d\u5fc5\u62c5\u5fc3\uff01GitHub \u4f1a\u81ea\u52a8\u5e2e\u4f60\u5c06 \u672c\u9879\u76ee \u7684\u6240\u6709\u6587\u4ef6\u590d\u5236\u4e00\u4efd\uff0c\u653e\u5230\u4f60\u7684\u4ed3\u5e93\u4e2d\uff08fork\uff09\u5e76\u521b\u5efa\u7533\u8bf7\u5408\u5e76\u66f4\u6539\u7684\u8bf7\u6c42 (Pull Request)\uff1b \u4e4b\u540e\uff0c\u70b9\u4e0a\u65b9\u7684\u7eff\u8272\u6309\u94ae (Create pull request) \u540e\uff0cGitHub \u4f1a\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684\u9875\u9762 Open a pull request\u3002\u5220\u6389\u65b9\u6846\u91cc\u7684\u6587\u5b57\uff0c\u7b80\u5355\u5199\u5199\u4f60\u505a\u7684\u4fee\u6539\uff0c\u7136\u540e\u518d\u70b9\u4e00\u4e0b\u4e0b\u9762\u7684\u7eff\u8272\u6309\u94ae (Create pull request)\uff1b \u4e0d\u51fa\u610f\u5916\u7684\u8bdd\uff0c\u4f60\u7684 PR \u5c31\u987a\u5229\u63d0\u4ea4\u5230\u4ed3\u5e93\uff0c\u7b49\u5f85\u5408\u5e76\u4e86\u3002\u4e4b\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u7b49\u5f85\u9879\u76ee\u7ec4\u5408\u5e76\u4f60\u7684\u5206\u652f\uff0c\u6216\u8005\u6307\u51fa\u8fd8\u8981\u4fee\u6539\u7684\u5730\u65b9\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4ed6\u4eba\u7684 PR \u63d0\u51fa\u4fee\u6539\u610f\u89c1\uff0c\u6216\u8005\u53ea\u662f\u70b9\u8d5e/\u8e29\u3002\u5982\u679c\u6709\u6d88\u606f\uff0c\u4f1a\u6709\u90ae\u4ef6\u901a\u77e5\u548c/\u6216\u51fa\u73b0\u5728\u7f51\u9875\u53f3\u4e0a\u89d2\u7684\u63d0\u9192\uff08\u53d6\u51b3\u4e8e\u4f60\u4e2a\u4eba Settings \u4e2d\u7684\u8bbe\u7f6e\uff09\u3002 \u5728\u4f60\u7684\u5206\u652f\u88ab\u5408\u5e76 (merge) \u5230\u4e3b\u5206\u652f (main) \u4e4b\u524d\uff0c\u4f60\u5bf9 \u672c\u9879\u76ee \u6240\u505a\u7684\u4efb\u4f55\u4fee\u6539\u90fd\u4e0d\u4f1a\u51fa\u73b0\u5728\u9875\u9762\u4e0a\u3002\u6240\u4ee5\u8bf7\u4e0d\u7528\u62c5\u5fc3\u201c\u4f60\u7684\u7f16\u8f91\u4f1a\u7834\u574f\u7f51\u9875\u6b63\u5728\u663e\u793a\u7684\u9875\u9762\u201d\u4e00\u4e8b\u3002","title":"\u6211\u4e4b\u524d\u6ca1\u600e\u4e48\u7528\u8fc7 GitHub"},{"location":"about/support/#\u6211\u4e4b\u524d\u7528\u8fc7-github","text":"\u5927\u80c6\u5199\u5427\uff01","title":"\u6211\u4e4b\u524d\u7528\u8fc7 GitHub"},{"location":"basic/","text":"\u7b80\u4ecb \u2693\ufe0e \u4e00\u4e9b\u540d\u8bcd\u7684\u610f\u4e49\u662f\u81ea\u660e\u7684\uff0c\u6bd4\u5982\u6a21\u62df\u3001\u641c\u7d22\u7b49\uff0c\u8fd9\u4e9b\u8bcd\u5c31\u4e0d\u518d\u8be6\u52a0\u89e3\u91ca\u4e86\u3002 \u5e8f \u2693\ufe0e \u8bed\u8a00\u53ea\u662f\u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u597d\u7684\u7b97\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u91cc\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u7b97\u6cd5\u77e5\u8bc6\u3002 \u6211\u6311\u9009\u4e86\u4e00\u70b9\u9898\u76ee\uff0c\u5728\u6bcf\u9875\u7684\u6700\u4e0b\u9762\u3002\u5168\u90e8\u89c1 \u9898\u76ee\u5217\u8868\u6c47\u603b \u3002 \u90e8\u5206\u5185\u5bb9\u6765\u81ea\u4e8e OI-Wiki \uff0c\u90a3\u91cc\u4e5f\u6709\u8bb8\u591a\u7b97\u6cd5\u7684\u4ecb\u7ecd\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b\u3002 \u6211\u4e0d\u53ef\u80fd\u6bcf\u4e2a\u65b9\u5411\u90fd\u9762\u9762\u4ff1\u5230\uff0c\u5f53\u4e00\u9053\u9898\u5361\u4f4f\u4e00\u4e2a\u5c0f\u65f6\u4ee5\u4e0a\u65f6\uff0c\u5c31\u53ef\u4ee5\u53bb\u9898\u89e3\u533a\u770b\u770b\u4e86\u3002 \u8bd5\u673a\u9898 \u2693\ufe0e P1001 A+B Problem P1047 \u6821\u95e8\u5916\u7684\u6811 P2181 \u5bf9\u89d2\u7ebf","title":"\u7b80\u4ecb"},{"location":"basic/#\u7b80\u4ecb","text":"\u4e00\u4e9b\u540d\u8bcd\u7684\u610f\u4e49\u662f\u81ea\u660e\u7684\uff0c\u6bd4\u5982\u6a21\u62df\u3001\u641c\u7d22\u7b49\uff0c\u8fd9\u4e9b\u8bcd\u5c31\u4e0d\u518d\u8be6\u52a0\u89e3\u91ca\u4e86\u3002","title":"\u7b80\u4ecb"},{"location":"basic/#\u5e8f","text":"\u8bed\u8a00\u53ea\u662f\u5de5\u5177\uff0c\u5982\u679c\u6ca1\u6709\u597d\u7684\u7b97\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u89e3\u51b3\u95ee\u9898\u3002\u8fd9\u91cc\u4f1a\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u7b97\u6cd5\u77e5\u8bc6\u3002 \u6211\u6311\u9009\u4e86\u4e00\u70b9\u9898\u76ee\uff0c\u5728\u6bcf\u9875\u7684\u6700\u4e0b\u9762\u3002\u5168\u90e8\u89c1 \u9898\u76ee\u5217\u8868\u6c47\u603b \u3002 \u90e8\u5206\u5185\u5bb9\u6765\u81ea\u4e8e OI-Wiki \uff0c\u90a3\u91cc\u4e5f\u6709\u8bb8\u591a\u7b97\u6cd5\u7684\u4ecb\u7ecd\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u770b\u770b\u3002 \u6211\u4e0d\u53ef\u80fd\u6bcf\u4e2a\u65b9\u5411\u90fd\u9762\u9762\u4ff1\u5230\uff0c\u5f53\u4e00\u9053\u9898\u5361\u4f4f\u4e00\u4e2a\u5c0f\u65f6\u4ee5\u4e0a\u65f6\uff0c\u5c31\u53ef\u4ee5\u53bb\u9898\u89e3\u533a\u770b\u770b\u4e86\u3002","title":"\u5e8f"},{"location":"basic/#\u8bd5\u673a\u9898","text":"P1001 A+B Problem P1047 \u6821\u95e8\u5916\u7684\u6811 P2181 \u5bf9\u89d2\u7ebf","title":"\u8bd5\u673a\u9898"},{"location":"basic/basic/","text":"\u7b97\u6cd5\u601d\u60f3 \u2693\ufe0e \u8fd9\u91cc\u7f57\u5217\u4e86\u4e00\u4e9b\u57fa\u672c\u601d\u60f3\uff0c\u53ef\u80fd\u8f83\u4e3a\u62bd\u8c61\uff0c\u53ef\u4ee5\u53cd\u590d\u56de\u6765\u770b\u3002 \u62bd\u8c61\u7684\u7406\u89e3\u201c\u5206\u6cbb\u201d\u3001\u201c\u8d2a\u5fc3\u201d\u7b49\u7b97\u6cd5\u53ef\u80fd\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u6211\u8fd8\u51c6\u5907\u4e86\u4e00\u4e9b\u4f8b\u9898\u6765\u5e2e\u52a9\u601d\u8003\u3002 \u679a\u4e3e \u2693\ufe0e \u5373\u4ece\u6240\u6709\u7684\u53ef\u80fd\u7684\u89e3\u4e2d\u4e00\u4e00\u6d4b\u8bd5\uff0c\u5224\u65ad\u9898\u76ee\u7684\u6761\u4ef6\u662f\u5426\u6210\u7acb\u3002 \u679a\u4e3e\u7684\u5173\u952e\uff1a\u679a\u4e3e\u7a7a\u95f4\uff0c\u679a\u4e3e\u987a\u5e8f\u3002 \u663e\u7136\u95ee\u9898\u7684\u53ef\u80fd\u7684\u89e3\u7a7a\u95f4\u4e0d\u80fd\u592a\u5927\uff0c\u5426\u5219\u65e0\u6cd5\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u56e0\u6b64\u8981\u5c3d\u91cf\u51cf\u5c0f\u679a\u4e3e\u7684\u8303\u56f4\u3002 \u679a\u4e3e\u7684\u987a\u5e8f\u4e5f\u5f88\u91cd\u8981\uff0c\u6bd4\u5982\u6c42\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u81ea\u7136\u662f\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u3002 \u5e38\u5e38\u4f7f\u7528\u641c\u7d22\u6765\u5b9e\u73b0\u679a\u4e3e\u3002 \u6a21\u62df \u2693\ufe0e \u7528\u4ee3\u7801\u6a21\u62df\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u64cd\u4f5c\u3002 \u6a21\u62df\u9898\u76ee\u901a\u5e38\u5177\u6709\u7801\u91cf\u5927\u3001\u64cd\u4f5c\u591a\u3001\u601d\u8def\u7e41\u590d\u7684\u7279\u70b9\uff0c\u975e\u5e38\u8003\u9a8c\u7801\u529b\u3002 \u5206\u6cbb \u2693\ufe0e \u5373\u5206\u800c\u6cbb\u4e4b\uff0c\u5c06\u4e00\u4e2a\u5927\u7684\u95ee\u9898\u5212\u5206\u6210\u89c4\u6a21\u8f83\u5c0f\u7684\u5b50\u95ee\u9898\u3002\u5927\u81f4\u53ef\u5206\u6210\u4e09\u6b65 \u5206\u89e3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u591a\u4e2a\u7c7b\u4f3c\u7684\u5b50\u95ee\u9898\u3002 \u89e3\u51b3\uff1a\u53cd\u590d\u5206\u89e3\uff0c\u76f4\u5230\u5b50\u95ee\u9898\u53ef\u4ee5\u88ab\u76f4\u63a5\u89e3\u51b3\u3002 \u5408\u5e76\uff1a\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u6210\u539f\u95ee\u9898\u7684\u89e3\u3002 \u5206\u6cbb\u6cd5\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4e00\u822c\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a \u8be5\u95ee\u9898\u7684\u89c4\u6a21\u8f83\u5c0f\u65f6\u53ef\u4ee5\u88ab\u5bb9\u6613\u7684\u89e3\u51b3\u3002 \u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5408\u5e76\u4e3a\u539f\u95ee\u9898\u7684\u89e3\u3002 \u5e38\u7528\u7684\u5b9e\u73b0\u5206\u6cbb\u7684\u65b9\u6cd5\u6709\u9012\u5f52\u3001\u9012\u63a8\u3001\u52a8\u6001\u89c4\u5212\u3001\u641c\u7d22\u7b49\uff0c\u7075\u6d3b\u591a\u53d8\u3002 \u8d2a\u5fc3 \u2693\ufe0e \u8d2a\u5fc3\u7b97\u6cd5\uff0c\u662f\u7528\u8ba1\u7b97\u673a\u6765\u6a21\u62df\u4e00\u4e2a\u201c\u8d2a\u5fc3\u201d\u7684\u4eba\u505a\u51fa\u51b3\u7b56\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u4eba\u5341\u5206\u8d2a\u5a6a\uff0c\u6bcf\u4e00\u6b65\u884c\u52a8\u603b\u662f\u6309\u67d0\u79cd\u6307\u6807\u9009\u53d6\u6700\u4f18\u7684\u64cd\u4f5c\u3002\u800c\u4e14\u4ed6\u76ee\u5149\u77ed\u6d45\uff0c\u603b\u662f\u53ea\u770b\u773c\u524d\uff0c\u5e76\u4e0d\u8003\u8651\u4ee5\u540e\u53ef\u80fd\u9020\u6210\u7684\u5f71\u54cd\u3002 \u53ef\u60f3\u800c\u77e5\uff0c\u53ea\u6709\u5728\u7279\u5b9a\u7684\u95ee\u9898\u4e0b\uff0c\u8d2a\u5fc3\u6cd5\u624d\u80fd\u83b7\u5f97\u6700\u4f18\u89e3\u3002\u56e0\u6b64\u4f7f\u7528\u8d2a\u5fc3\u6cd5\u65f6\uff0c\u8981\u786e\u4fdd\u81ea\u5df1\u80fd\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u5e38\u89c1\u7684\u6709\u4e24\u79cd\u8bc1\u660e\u65b9\u6cd5\uff1a \u53cd\u8bc1\u6cd5\uff1a\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u540e\u7b54\u6848\u4e0d\u4f1a\u66f4\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u786e\u5b9a\u5f53\u524d\u7684\u7b97\u6cd5\u662f\u6700\u4f18\u89e3\u4e86\u3002 \u5f52\u7eb3\u6cd5\uff1a\u901a\u8fc7\u5f52\u7eb3\u8bc1\u660e\u7b54\u6848\u662f\u6700\u4f18\u89e3\u3002 \u9884\u5904\u7406 \u2693\ufe0e \u63d0\u524d\u8ba1\u7b97\u4e00\u4e9b\u53ef\u80fd\u7528\u5230\u7684\u6570\u636e\uff0c\u8fd9\u6837\u4f1a\u907f\u514d\u6bcf\u6b21\u8ba1\u7b97\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u3002 \u6709\u65f6\u4e5f\u53eb\u6253\u8868\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"basic/basic/#\u7b97\u6cd5\u601d\u60f3","text":"\u8fd9\u91cc\u7f57\u5217\u4e86\u4e00\u4e9b\u57fa\u672c\u601d\u60f3\uff0c\u53ef\u80fd\u8f83\u4e3a\u62bd\u8c61\uff0c\u53ef\u4ee5\u53cd\u590d\u56de\u6765\u770b\u3002 \u62bd\u8c61\u7684\u7406\u89e3\u201c\u5206\u6cbb\u201d\u3001\u201c\u8d2a\u5fc3\u201d\u7b49\u7b97\u6cd5\u53ef\u80fd\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u6211\u8fd8\u51c6\u5907\u4e86\u4e00\u4e9b\u4f8b\u9898\u6765\u5e2e\u52a9\u601d\u8003\u3002","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"basic/basic/#\u679a\u4e3e","text":"\u5373\u4ece\u6240\u6709\u7684\u53ef\u80fd\u7684\u89e3\u4e2d\u4e00\u4e00\u6d4b\u8bd5\uff0c\u5224\u65ad\u9898\u76ee\u7684\u6761\u4ef6\u662f\u5426\u6210\u7acb\u3002 \u679a\u4e3e\u7684\u5173\u952e\uff1a\u679a\u4e3e\u7a7a\u95f4\uff0c\u679a\u4e3e\u987a\u5e8f\u3002 \u663e\u7136\u95ee\u9898\u7684\u53ef\u80fd\u7684\u89e3\u7a7a\u95f4\u4e0d\u80fd\u592a\u5927\uff0c\u5426\u5219\u65e0\u6cd5\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u56e0\u6b64\u8981\u5c3d\u91cf\u51cf\u5c0f\u679a\u4e3e\u7684\u8303\u56f4\u3002 \u679a\u4e3e\u7684\u987a\u5e8f\u4e5f\u5f88\u91cd\u8981\uff0c\u6bd4\u5982\u6c42\u6700\u540e\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\uff0c\u81ea\u7136\u662f\u4ece\u540e\u5f80\u524d\u679a\u4e3e\u3002 \u5e38\u5e38\u4f7f\u7528\u641c\u7d22\u6765\u5b9e\u73b0\u679a\u4e3e\u3002","title":"\u679a\u4e3e"},{"location":"basic/basic/#\u6a21\u62df","text":"\u7528\u4ee3\u7801\u6a21\u62df\u9898\u76ee\u4e2d\u8981\u6c42\u7684\u64cd\u4f5c\u3002 \u6a21\u62df\u9898\u76ee\u901a\u5e38\u5177\u6709\u7801\u91cf\u5927\u3001\u64cd\u4f5c\u591a\u3001\u601d\u8def\u7e41\u590d\u7684\u7279\u70b9\uff0c\u975e\u5e38\u8003\u9a8c\u7801\u529b\u3002","title":"\u6a21\u62df"},{"location":"basic/basic/#\u5206\u6cbb","text":"\u5373\u5206\u800c\u6cbb\u4e4b\uff0c\u5c06\u4e00\u4e2a\u5927\u7684\u95ee\u9898\u5212\u5206\u6210\u89c4\u6a21\u8f83\u5c0f\u7684\u5b50\u95ee\u9898\u3002\u5927\u81f4\u53ef\u5206\u6210\u4e09\u6b65 \u5206\u89e3\uff1a\u5c06\u539f\u95ee\u9898\u5206\u89e3\u4e3a\u591a\u4e2a\u7c7b\u4f3c\u7684\u5b50\u95ee\u9898\u3002 \u89e3\u51b3\uff1a\u53cd\u590d\u5206\u89e3\uff0c\u76f4\u5230\u5b50\u95ee\u9898\u53ef\u4ee5\u88ab\u76f4\u63a5\u89e3\u51b3\u3002 \u5408\u5e76\uff1a\u5c06\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u6210\u539f\u95ee\u9898\u7684\u89e3\u3002 \u5206\u6cbb\u6cd5\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u4e00\u822c\u6709\u4ee5\u4e0b\u7279\u5f81\uff1a \u8be5\u95ee\u9898\u7684\u89c4\u6a21\u8f83\u5c0f\u65f6\u53ef\u4ee5\u88ab\u5bb9\u6613\u7684\u89e3\u51b3\u3002 \u5b50\u95ee\u9898\u7684\u89e3\u53ef\u4ee5\u5408\u5e76\u4e3a\u539f\u95ee\u9898\u7684\u89e3\u3002 \u5e38\u7528\u7684\u5b9e\u73b0\u5206\u6cbb\u7684\u65b9\u6cd5\u6709\u9012\u5f52\u3001\u9012\u63a8\u3001\u52a8\u6001\u89c4\u5212\u3001\u641c\u7d22\u7b49\uff0c\u7075\u6d3b\u591a\u53d8\u3002","title":"\u5206\u6cbb"},{"location":"basic/basic/#\u8d2a\u5fc3","text":"\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u662f\u7528\u8ba1\u7b97\u673a\u6765\u6a21\u62df\u4e00\u4e2a\u201c\u8d2a\u5fc3\u201d\u7684\u4eba\u505a\u51fa\u51b3\u7b56\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u4eba\u5341\u5206\u8d2a\u5a6a\uff0c\u6bcf\u4e00\u6b65\u884c\u52a8\u603b\u662f\u6309\u67d0\u79cd\u6307\u6807\u9009\u53d6\u6700\u4f18\u7684\u64cd\u4f5c\u3002\u800c\u4e14\u4ed6\u76ee\u5149\u77ed\u6d45\uff0c\u603b\u662f\u53ea\u770b\u773c\u524d\uff0c\u5e76\u4e0d\u8003\u8651\u4ee5\u540e\u53ef\u80fd\u9020\u6210\u7684\u5f71\u54cd\u3002 \u53ef\u60f3\u800c\u77e5\uff0c\u53ea\u6709\u5728\u7279\u5b9a\u7684\u95ee\u9898\u4e0b\uff0c\u8d2a\u5fc3\u6cd5\u624d\u80fd\u83b7\u5f97\u6700\u4f18\u89e3\u3002\u56e0\u6b64\u4f7f\u7528\u8d2a\u5fc3\u6cd5\u65f6\uff0c\u8981\u786e\u4fdd\u81ea\u5df1\u80fd\u8bc1\u660e\u5176\u6b63\u786e\u6027\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u5e38\u89c1\u7684\u6709\u4e24\u79cd\u8bc1\u660e\u65b9\u6cd5\uff1a \u53cd\u8bc1\u6cd5\uff1a\u4ea4\u6362\u4e24\u4e2a\u5143\u7d20\u540e\u7b54\u6848\u4e0d\u4f1a\u66f4\u597d\uff0c\u90a3\u4e48\u53ef\u4ee5\u786e\u5b9a\u5f53\u524d\u7684\u7b97\u6cd5\u662f\u6700\u4f18\u89e3\u4e86\u3002 \u5f52\u7eb3\u6cd5\uff1a\u901a\u8fc7\u5f52\u7eb3\u8bc1\u660e\u7b54\u6848\u662f\u6700\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3"},{"location":"basic/basic/#\u9884\u5904\u7406","text":"\u63d0\u524d\u8ba1\u7b97\u4e00\u4e9b\u53ef\u80fd\u7528\u5230\u7684\u6570\u636e\uff0c\u8fd9\u6837\u4f1a\u907f\u514d\u6bcf\u6b21\u8ba1\u7b97\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u3002 \u6709\u65f6\u4e5f\u53eb\u6253\u8868\u3002","title":"\u9884\u5904\u7406"},{"location":"basic/binary/","text":"\u4e8c\u5206 \u2693\ufe0e \u4e8c\u5206\u67e5\u627e\u6bd4\u8f83\u57fa\u7840\uff0c\u8fd9\u91cc\u6211\u5c31\u8bb2\u7684\u7b80\u7565\u4e00\u70b9\u3002 \u7b97\u6cd5\u601d\u60f3 \u2693\ufe0e \u5bf9\u4e8e\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5982\u679c\u8fd8\u662f\u7ebf\u6027\u67e5\u627e\uff0c\u5b9e\u5728\u662f\u592a\u6d6a\u8d39\u4e86\u3002 \u5047\u8bbe\u6570\u7ec4 \\(a\\) \u9012\u589e\uff0c\u8bbe\u67e5\u627e\u533a\u95f4\u662f \\([l,r]\\) \uff0c\u88ab\u67e5\u627e\u5143\u7d20\u662f \\(x\\) \u3002 \u53d6\u67e5\u627e\u8303\u56f4\u7684\u4e2d\u95f4\u503c \\(m = \\dfrac{l+r}{2}\\) \u3002 \u5982\u679c \\(a_m \\geqslant x\\) \uff0c\u8bf4\u660e \\(x\\) \u4f1a\u5728 \\([l,m]\\) \u8303\u56f4 \u5426\u5219 \\(x\\) \u4f1a\u5728 \\([m,r]\\) \u3002 \u5982\u6b64\u53cd\u590d\u3002 1 2 3 4 5 6 7 8 while ( l < r ) { int mid = ( l + r ) / 2 ; if ( aa [ mid ] >= x ) r = mid ; else l = mid + 1 ; } return l ; \u5e94\u7528 \u2693\ufe0e \u786e\u5207\u7684\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u73b0\u7684\u662f\uff1a\u5728\u5355\u589e\u6570\u7ec4\u4e2d\u67e5\u627e \\(\\geqslant x\\) \u7684\u6570\u4e2d\u6700\u524d\u7684\u4e00\u4e2a\u3002 \u5bf9\u4e8e\u5355\u8c03\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u67e5\u627e\u5176\u7b26\u5408\u6761\u4ef6\u7684\u503c\u3002 \u6709\u65f6\u4f1a\u9047\u5230\u6700\u5927\u503c\u6700\u5c0f\u5316\u7684\u95ee\u9898\uff0c\u6bd4\u5982 P1873 \u780d\u6811 \u3002 \u7ed9\u5b9a\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u9ad8\u5ea6\uff0c\u4f10\u6728\u5de5\u5c06\u780d\u4f10\u6240\u6709\u7684\u6811\u6bd4 \\(H\\) \u9ad8\u7684\u90e8\u5206\uff0c\u8981\u6c42\u952f\u4e0b\u7684\u6728\u6750\u7684\u603b\u957f\u81f3\u5c11\u4e3a \\(M\\) \uff0c\u5e76\u4e14\u5c3d\u91cf\u5c0f\uff0c\u6c42 \\(H\\) \u3002 \u76f4\u63a5\u8ba1\u7b97\u4e00\u4e2a\u503c\u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8f83\u5bb9\u6613\u7684\u5224\u65ad\u67d0\u4e2a\u503c\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002 \u540c\u65f6\uff0c\u7b54\u6848\u662f\u5355\u8c03\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u968f\u7740 \\(H\\) \u964d\u4f4e\uff0c\u952f\u4e0b\u7684\u6728\u6750\u53ea\u4f1a\u589e\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fd\u6570 \\(f(H)\\) \uff0c\u4ee4\u5176\u503c\u4e3a\u952f\u4e0b\u6728\u6750\u7684\u603b\u957f\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b54\u6848\u4e8c\u5206\uff0c\u6bcf\u6b21\u68c0\u9a8c\u5176\u53ef\u884c\u6027\uff0c\u627e\u5230\u53ef\u884c\u4e2d\u6700\u524d\u7684\u4e00\u4e2a\u3002 \u4f8b\u9898 \u2693\ufe0e P1024 \u4e00\u5143\u4e09\u6b21\u65b9\u7a0b\u6c42\u89e3 P2249 \u67e5\u627e P1873 \u780d\u6811 P2678 \u8df3\u77f3\u5934","title":"\u4e8c\u5206"},{"location":"basic/binary/#\u4e8c\u5206","text":"\u4e8c\u5206\u67e5\u627e\u6bd4\u8f83\u57fa\u7840\uff0c\u8fd9\u91cc\u6211\u5c31\u8bb2\u7684\u7b80\u7565\u4e00\u70b9\u3002","title":"\u4e8c\u5206"},{"location":"basic/binary/#\u7b97\u6cd5\u601d\u60f3","text":"\u5bf9\u4e8e\u6709\u5e8f\u7684\u6570\u7ec4\uff0c\u67e5\u627e\u4e00\u4e2a\u5143\u7d20\u5982\u679c\u8fd8\u662f\u7ebf\u6027\u67e5\u627e\uff0c\u5b9e\u5728\u662f\u592a\u6d6a\u8d39\u4e86\u3002 \u5047\u8bbe\u6570\u7ec4 \\(a\\) \u9012\u589e\uff0c\u8bbe\u67e5\u627e\u533a\u95f4\u662f \\([l,r]\\) \uff0c\u88ab\u67e5\u627e\u5143\u7d20\u662f \\(x\\) \u3002 \u53d6\u67e5\u627e\u8303\u56f4\u7684\u4e2d\u95f4\u503c \\(m = \\dfrac{l+r}{2}\\) \u3002 \u5982\u679c \\(a_m \\geqslant x\\) \uff0c\u8bf4\u660e \\(x\\) \u4f1a\u5728 \\([l,m]\\) \u8303\u56f4 \u5426\u5219 \\(x\\) \u4f1a\u5728 \\([m,r]\\) \u3002 \u5982\u6b64\u53cd\u590d\u3002 1 2 3 4 5 6 7 8 while ( l < r ) { int mid = ( l + r ) / 2 ; if ( aa [ mid ] >= x ) r = mid ; else l = mid + 1 ; } return l ;","title":"\u7b97\u6cd5\u601d\u60f3"},{"location":"basic/binary/#\u5e94\u7528","text":"\u786e\u5207\u7684\u8bf4\uff0c\u4e0a\u8ff0\u4ee3\u7801\u5b9e\u73b0\u7684\u662f\uff1a\u5728\u5355\u589e\u6570\u7ec4\u4e2d\u67e5\u627e \\(\\geqslant x\\) \u7684\u6570\u4e2d\u6700\u524d\u7684\u4e00\u4e2a\u3002 \u5bf9\u4e8e\u5355\u8c03\u7684\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4e8c\u5206\u67e5\u627e\u67e5\u627e\u5176\u7b26\u5408\u6761\u4ef6\u7684\u503c\u3002 \u6709\u65f6\u4f1a\u9047\u5230\u6700\u5927\u503c\u6700\u5c0f\u5316\u7684\u95ee\u9898\uff0c\u6bd4\u5982 P1873 \u780d\u6811 \u3002 \u7ed9\u5b9a\u68ee\u6797\u4e2d\u6bcf\u68f5\u6811\u7684\u9ad8\u5ea6\uff0c\u4f10\u6728\u5de5\u5c06\u780d\u4f10\u6240\u6709\u7684\u6811\u6bd4 \\(H\\) \u9ad8\u7684\u90e8\u5206\uff0c\u8981\u6c42\u952f\u4e0b\u7684\u6728\u6750\u7684\u603b\u957f\u81f3\u5c11\u4e3a \\(M\\) \uff0c\u5e76\u4e14\u5c3d\u91cf\u5c0f\uff0c\u6c42 \\(H\\) \u3002 \u76f4\u63a5\u8ba1\u7b97\u4e00\u4e2a\u503c\u53ef\u80fd\u4e0d\u592a\u5bb9\u6613\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u8f83\u5bb9\u6613\u7684\u5224\u65ad\u67d0\u4e2a\u503c\u662f\u5426\u7b26\u5408\u6761\u4ef6\u3002 \u540c\u65f6\uff0c\u7b54\u6848\u662f\u5355\u8c03\u7684\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u968f\u7740 \\(H\\) \u964d\u4f4e\uff0c\u952f\u4e0b\u7684\u6728\u6750\u53ea\u4f1a\u589e\u52a0\u3002 \u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u51fd\u6570 \\(f(H)\\) \uff0c\u4ee4\u5176\u503c\u4e3a\u952f\u4e0b\u6728\u6750\u7684\u603b\u957f\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5bf9\u7b54\u6848\u4e8c\u5206\uff0c\u6bcf\u6b21\u68c0\u9a8c\u5176\u53ef\u884c\u6027\uff0c\u627e\u5230\u53ef\u884c\u4e2d\u6700\u524d\u7684\u4e00\u4e2a\u3002","title":"\u5e94\u7528"},{"location":"basic/binary/#\u4f8b\u9898","text":"P1024 \u4e00\u5143\u4e09\u6b21\u65b9\u7a0b\u6c42\u89e3 P2249 \u67e5\u627e P1873 \u780d\u6811 P2678 \u8df3\u77f3\u5934","title":"\u4f8b\u9898"},{"location":"basic/divide/","text":"\u9012\u5f52 \u2693\ufe0e \u9012\u5f52\u662f\u5206\u6cbb\u601d\u60f3\u7684\u4e00\u4e2a\u5e94\u7528\uff0c\u662f\u4e00\u79cd\u7f16\u7a0b\u6280\u5de7\u3002 \u5f52\u7684\u57fa\u672c\u601d\u60f3\u662f\u67d0\u4e2a\u51fd\u6570\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab\uff0c\u8fd9\u6837\u539f\u95ee\u9898\u7684\u6c42\u89e3\u5c31\u8f6c\u6362\u4e3a\u4e86\u8bb8\u591a\u6027\u8d28\u76f8\u540c\u4f46\u662f\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002 \u9012\u5f52\u4e00\u822c\u5305\u542b\u4e24\u4e2a\u6761\u4ef6\uff0c\u7ed3\u675f\u6761\u4ef6\u548c\u81ea\u6211\u8c03\u7528\u3002\u81ea\u6211\u8c03\u7528\u662f\u5728\u89e3\u51b3\u5b50\u95ee\u9898\uff0c\u800c\u7ed3\u675f\u6761\u4ef6\u5b9a\u4e49\u4e86\u6700\u7b80\u5b50\u95ee\u9898\u7684\u7b54\u6848\u3002 \u4e3e\u4f8b \u2693\ufe0e \u8981\u7406\u89e3\u9012\u5f52\uff0c\u5c31\u5f97\u5148\u7406\u89e3\u4ec0\u4e48\u662f\u9012\u5f52\u3002 \u9012\u5f52\u5728\u6570\u5b66\u4e2d\u975e\u5e38\u5e38\u89c1\u3002\u4f8b\u5982\uff0c\u81ea\u7136\u6570\u7684\u5b9a\u4e49\uff08Peano \u516c\u7406\uff09\uff1a \\(0\\) \u662f\u4e00\u4e2a\u81ea\u7136\u6570\uff0c\u6bcf\u4e2a\u81ea\u7136\u6570\u90fd\u6709\u4e00\u4e2a\u540e\u7ee7\uff0c\u8fd9\u4e00\u4e2a\u540e\u7ee7\u4e5f\u662f\u81ea\u7136\u6570\u3002 \u7406\u89e3\u9012\u5f52\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u8fc7\u5206\u5173\u6ce8\u8fd9\u4e2a\u5b50\u95ee\u9898\u662f\u5982\u4f55\u88ab\u89e3\u51b3\u7684\uff0c\u4e0d\u5fc5\u8df3\u8fdb\u8fd9\u4e2a\u51fd\u6570\u91cc\u9762\u4f01\u56fe\u63a2\u7a76\u66f4\u591a\u7ec6\u8282\u3002 \u5047\u5982\u6211\u4eec\u8981\u8ba1\u7b97\u9636\u4e58\uff0c\u521d\u59cb\u503c \\(f(1) = 1\\) \uff0c\u4e14 \\[f(n) = nf(n-1)\\] \u4e8e\u662f 1 2 3 4 5 int f ( int n ) { if ( n == 1 ) return 1 ; return n * f ( n - 1 ); } \u5047\u5982\u6211\u4eec\u8981\u8ba1\u7b97 Fibonacci \u6570\u5217\uff0c\u521d\u59cb\u503c \\(f(1) = f(2) = 1\\) \uff0c\u4e14 \\[f(n) = f(n-1) + f(n-2)\\] \u4e8e\u662f 1 2 3 4 5 int f ( int n ) { if ( n <= 2 ) return 1 ; return f ( n ) + f ( n - 1 ); } \u9012\u5f52\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\u3002 \u9012\u5f52\u7684\u7f3a\u70b9 \u2693\ufe0e \u5728\u7a0b\u5e8f\u6267\u884c\u4e2d\uff0c\u9012\u5f52\u662f\u5229\u7528\u5806\u6808\u6765\u5b9e\u73b0\u7684\u3002\u6bcf\u5f53\u8fdb\u5165\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u6808\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\u6808\u5e27\uff0c\u6bcf\u6b21\u51fd\u6570\u8fd4\u56de\uff0c\u6808\u5c31\u4f1a\u51cf\u5c11\u4e00\u5c42\u6808\u5e27\u3002\u800c\u6808\u4e0d\u662f\u65e0\u9650\u5927\u7684\uff0c\u5f53\u9012\u5f52\u5c42\u6570\u8fc7\u591a\u65f6\uff0c\u5c31\u4f1a\u9020\u6210 \u6808\u6ea2\u51fa \u7684\u540e\u679c\u3002 \u56e0\u4e3a\u6808\u672c\u8eab\u5b58\u5728\u989d\u5916\u7684\u5f00\u9500\uff0c\u800c\u5faa\u73af\u6ca1\u6709\u3002\u521d\u7ea7\u7684\u9012\u5f52\u5b9e\u73b0\u53ef\u80fd\u4f1a\u56e0\u4e3a\u9012\u5f52\u6b21\u6570\u592a\u591a\uff0c\u5bb9\u6613\u8d85\u65f6\u3002\u8fd9\u65f6\u9700\u8981\u5bf9\u9012\u5f52\u8fdb\u884c\u4f18\u5316\uff0c\u6216\u8005\u5c1d\u8bd5\u975e\u9012\u5f52\u89e3\u6cd5\u3002 \u8bb0\u5fc6\u5316 \u2693\ufe0e \u9012\u5f52\u8ba1\u7b97\u9636\u4e58\u8fd8\u4e0d\u592a\u6162\uff0c\u4f46\u5047\u82e5\u8ba1\u7b97\u7684\u662f Fibonacci \u6570\u5217\u7b2c \\(100\\) \u9879\uff0c\u53ef\u80fd\u5c31\u7b49\u4e0d\u5230\u8f93\u51fa\u4e86\u3002 \u7a76\u5176\u6839\u672c\uff0c\u65f6\u95f4\u4e3b\u8981\u6d88\u8017\u5728\u91cd\u590d\u8ba1\u7b97\u4e0a\uff0c\u5c55\u5f00\u51e0\u6b21\u9012\u5f52\u5c31\u4f1a\u53d1\u73b0\u91cd\u590d\u8ba1\u7b97\u4e86\u5f88\u591a\u7684\u6570\u636e\u3002 \u662f\u5426\u53ef\u4ee5\u8bb0\u5fc6\u6bcf\u4e00\u6b21\u8ba1\u7b97\u7684\u503c\uff0c\u7b49\u540e\u9762\u7528\u7684\u65f6\u5019\u518d\u7528\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 int fib [ MAXN ], vis [ MAXN ]; int f ( int n ) { if ( n <= 2 ) return 1 ; if ( ! vis [ n ]) { fib [ n ] = f ( n - 1 ) + f ( n - 2 ); vis [ n ] = 1 ; } return fib [ n ]; } \u6211\u4eec\u589e\u52a0\u4e86 vis \u6570\u7ec4\uff0c\u7528\u6765\u6807\u5fd7 \\(f(n)\\) \u662f\u5426\u8ba1\u7b97\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u8ba1\u7b97\u8fc7\u624d\u53bb\u8ba1\u7b97\u5b83\uff0c\u82e5\u8ba1\u7b97\u8fc7\u5c31\u76f4\u63a5\u8fd4\u56de\u3002 \u56de\u6eaf\u6cd5 \u2693\ufe0e \u56de\u6eaf\u5c31\u4e0d\u8bb2\u4e86\uff0c\u60f3\u4e86\u89e3\u7684\u81ea\u5df1\u770b\u5427\u3002 Link \u4f8b\u9898 \u2693\ufe0e P2089 \u70e4\u9e21 P1464 Function","title":"\u9012\u5f52"},{"location":"basic/divide/#\u9012\u5f52","text":"\u9012\u5f52\u662f\u5206\u6cbb\u601d\u60f3\u7684\u4e00\u4e2a\u5e94\u7528\uff0c\u662f\u4e00\u79cd\u7f16\u7a0b\u6280\u5de7\u3002 \u5f52\u7684\u57fa\u672c\u601d\u60f3\u662f\u67d0\u4e2a\u51fd\u6570\u76f4\u63a5\u6216\u8005\u95f4\u63a5\u5730\u8c03\u7528\u81ea\u8eab\uff0c\u8fd9\u6837\u539f\u95ee\u9898\u7684\u6c42\u89e3\u5c31\u8f6c\u6362\u4e3a\u4e86\u8bb8\u591a\u6027\u8d28\u76f8\u540c\u4f46\u662f\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u3002 \u9012\u5f52\u4e00\u822c\u5305\u542b\u4e24\u4e2a\u6761\u4ef6\uff0c\u7ed3\u675f\u6761\u4ef6\u548c\u81ea\u6211\u8c03\u7528\u3002\u81ea\u6211\u8c03\u7528\u662f\u5728\u89e3\u51b3\u5b50\u95ee\u9898\uff0c\u800c\u7ed3\u675f\u6761\u4ef6\u5b9a\u4e49\u4e86\u6700\u7b80\u5b50\u95ee\u9898\u7684\u7b54\u6848\u3002","title":"\u9012\u5f52"},{"location":"basic/divide/#\u4e3e\u4f8b","text":"\u8981\u7406\u89e3\u9012\u5f52\uff0c\u5c31\u5f97\u5148\u7406\u89e3\u4ec0\u4e48\u662f\u9012\u5f52\u3002 \u9012\u5f52\u5728\u6570\u5b66\u4e2d\u975e\u5e38\u5e38\u89c1\u3002\u4f8b\u5982\uff0c\u81ea\u7136\u6570\u7684\u5b9a\u4e49\uff08Peano \u516c\u7406\uff09\uff1a \\(0\\) \u662f\u4e00\u4e2a\u81ea\u7136\u6570\uff0c\u6bcf\u4e2a\u81ea\u7136\u6570\u90fd\u6709\u4e00\u4e2a\u540e\u7ee7\uff0c\u8fd9\u4e00\u4e2a\u540e\u7ee7\u4e5f\u662f\u81ea\u7136\u6570\u3002 \u7406\u89e3\u9012\u5f52\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5173\u6ce8\u5982\u4f55\u628a\u539f\u95ee\u9898\u5212\u5206\u6210\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u95ee\u9898\uff0c\u800c\u4e0d\u9700\u8981\u8fc7\u5206\u5173\u6ce8\u8fd9\u4e2a\u5b50\u95ee\u9898\u662f\u5982\u4f55\u88ab\u89e3\u51b3\u7684\uff0c\u4e0d\u5fc5\u8df3\u8fdb\u8fd9\u4e2a\u51fd\u6570\u91cc\u9762\u4f01\u56fe\u63a2\u7a76\u66f4\u591a\u7ec6\u8282\u3002 \u5047\u5982\u6211\u4eec\u8981\u8ba1\u7b97\u9636\u4e58\uff0c\u521d\u59cb\u503c \\(f(1) = 1\\) \uff0c\u4e14 \\[f(n) = nf(n-1)\\] \u4e8e\u662f 1 2 3 4 5 int f ( int n ) { if ( n == 1 ) return 1 ; return n * f ( n - 1 ); } \u5047\u5982\u6211\u4eec\u8981\u8ba1\u7b97 Fibonacci \u6570\u5217\uff0c\u521d\u59cb\u503c \\(f(1) = f(2) = 1\\) \uff0c\u4e14 \\[f(n) = f(n-1) + f(n-2)\\] \u4e8e\u662f 1 2 3 4 5 int f ( int n ) { if ( n <= 2 ) return 1 ; return f ( n ) + f ( n - 1 ); } \u9012\u5f52\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\u3002","title":"\u4e3e\u4f8b"},{"location":"basic/divide/#\u9012\u5f52\u7684\u7f3a\u70b9","text":"\u5728\u7a0b\u5e8f\u6267\u884c\u4e2d\uff0c\u9012\u5f52\u662f\u5229\u7528\u5806\u6808\u6765\u5b9e\u73b0\u7684\u3002\u6bcf\u5f53\u8fdb\u5165\u4e00\u4e2a\u51fd\u6570\u8c03\u7528\uff0c\u6808\u5c31\u4f1a\u589e\u52a0\u4e00\u5c42\u6808\u5e27\uff0c\u6bcf\u6b21\u51fd\u6570\u8fd4\u56de\uff0c\u6808\u5c31\u4f1a\u51cf\u5c11\u4e00\u5c42\u6808\u5e27\u3002\u800c\u6808\u4e0d\u662f\u65e0\u9650\u5927\u7684\uff0c\u5f53\u9012\u5f52\u5c42\u6570\u8fc7\u591a\u65f6\uff0c\u5c31\u4f1a\u9020\u6210 \u6808\u6ea2\u51fa \u7684\u540e\u679c\u3002 \u56e0\u4e3a\u6808\u672c\u8eab\u5b58\u5728\u989d\u5916\u7684\u5f00\u9500\uff0c\u800c\u5faa\u73af\u6ca1\u6709\u3002\u521d\u7ea7\u7684\u9012\u5f52\u5b9e\u73b0\u53ef\u80fd\u4f1a\u56e0\u4e3a\u9012\u5f52\u6b21\u6570\u592a\u591a\uff0c\u5bb9\u6613\u8d85\u65f6\u3002\u8fd9\u65f6\u9700\u8981\u5bf9\u9012\u5f52\u8fdb\u884c\u4f18\u5316\uff0c\u6216\u8005\u5c1d\u8bd5\u975e\u9012\u5f52\u89e3\u6cd5\u3002","title":"\u9012\u5f52\u7684\u7f3a\u70b9"},{"location":"basic/divide/#\u8bb0\u5fc6\u5316","text":"\u9012\u5f52\u8ba1\u7b97\u9636\u4e58\u8fd8\u4e0d\u592a\u6162\uff0c\u4f46\u5047\u82e5\u8ba1\u7b97\u7684\u662f Fibonacci \u6570\u5217\u7b2c \\(100\\) \u9879\uff0c\u53ef\u80fd\u5c31\u7b49\u4e0d\u5230\u8f93\u51fa\u4e86\u3002 \u7a76\u5176\u6839\u672c\uff0c\u65f6\u95f4\u4e3b\u8981\u6d88\u8017\u5728\u91cd\u590d\u8ba1\u7b97\u4e0a\uff0c\u5c55\u5f00\u51e0\u6b21\u9012\u5f52\u5c31\u4f1a\u53d1\u73b0\u91cd\u590d\u8ba1\u7b97\u4e86\u5f88\u591a\u7684\u6570\u636e\u3002 \u662f\u5426\u53ef\u4ee5\u8bb0\u5fc6\u6bcf\u4e00\u6b21\u8ba1\u7b97\u7684\u503c\uff0c\u7b49\u540e\u9762\u7528\u7684\u65f6\u5019\u518d\u7528\u5462\uff1f 1 2 3 4 5 6 7 8 9 10 11 int fib [ MAXN ], vis [ MAXN ]; int f ( int n ) { if ( n <= 2 ) return 1 ; if ( ! vis [ n ]) { fib [ n ] = f ( n - 1 ) + f ( n - 2 ); vis [ n ] = 1 ; } return fib [ n ]; } \u6211\u4eec\u589e\u52a0\u4e86 vis \u6570\u7ec4\uff0c\u7528\u6765\u6807\u5fd7 \\(f(n)\\) \u662f\u5426\u8ba1\u7b97\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u8ba1\u7b97\u8fc7\u624d\u53bb\u8ba1\u7b97\u5b83\uff0c\u82e5\u8ba1\u7b97\u8fc7\u5c31\u76f4\u63a5\u8fd4\u56de\u3002","title":"\u8bb0\u5fc6\u5316"},{"location":"basic/divide/#\u56de\u6eaf\u6cd5","text":"\u56de\u6eaf\u5c31\u4e0d\u8bb2\u4e86\uff0c\u60f3\u4e86\u89e3\u7684\u81ea\u5df1\u770b\u5427\u3002 Link","title":"\u56de\u6eaf\u6cd5"},{"location":"basic/divide/#\u4f8b\u9898","text":"P2089 \u70e4\u9e21 P1464 Function","title":"\u4f8b\u9898"},{"location":"basic/dp/","text":"\u52a8\u6001\u89c4\u5212 \u2693\ufe0e \u52a8\u6001\u89c4\u5212\u7684\u201c\u72b6\u6001\u201d\u548c\u201c\u8f6c\u79fb\u201d\u7b49\u6982\u5ff5\u53ef\u80fd\u8f83\u4e3a\u62bd\u8c61\uff0c\u4e5f\u8fc7\u4e8e\u7075\u6d3b\uff0c\u6211\u5217\u51fa\u4e86\u8f83\u591a\u7684\u4f8b\u9898\u5e2e\u52a9\u601d\u8003\u3002 \u52a8\u6001\u89c4\u5212\u7684\u96be\u70b9\u5728\u4e8e\u72b6\u6001\u8bbe\u8ba1\u548c\u5b50\u7ed3\u6784\u7684\u6316\u6398\u3002 \u539f\u7406 \u2693\ufe0e \u5bf9\u4e8e\u9012\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u8fdb\u4e00\u6b65\u62bd\u8c61\u3002 \u8fd8\u662f Fibonacci \u6570\u5217\uff0c\u6211\u4eec\u628a \\(F_i\\) \u79f0\u4e3a\u4e00\u4e2a\u72b6\u6001\u3002\u8fd9\u4e2a\u72b6\u6001\u7531 \\(F_{i-1}\\) \u548c \\(F_{i-2}\\) \u8f6c\u79fb\uff1a \\[F_{i} = F_{i-1} + F_{i-2}\\] \u6b64\u516c\u5f0f\u79f0\u4e3a\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5b83\u63cf\u8ff0\u4e86\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6700\u540e\u662f\u8fb9\u754c \\(F_1=F_2=1\\) \u3002 \u5f88\u7b80\u5355\u5427\uff1f\u6765\u70b9\u57fa\u7840\u6a21\u578b\u3002 \u77e9\u9635\u53d6\u6570 \u2693\ufe0e \u7ed9\u5b9a\u4e00\u4e2a \\(m \\times n\\) \u7684\u77e9\u9635 \\(A\\) \uff08\u6570\u5b57\u4e09\u89d2\u5f62\u4e5f\u5dee\u4e0d\u591a\uff09\uff0c\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u8d70\uff0c\u6c42\u8def\u8fc7\u6240\u6709\u6570\u5b57\u4e4b\u548c\u6700\u5927\u503c\u3002 \u53ef\u4ee5\u5148\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u600e\u4e48\u8bbe\u72b6\u6001\u6bd4\u8f83\u597d\u3002 \u5b9a\u4e49\u72b6\u6001 \\(F(i,j)\\) \u4e3a\u505c\u5728\u4f4d\u7f6e \\((i,j)\\) \u7684\u6240\u6709\u8def\u5f84\u4e2d\uff0c\u8def\u8fc7\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u800c\u4e14\u7531\u9898\u77e5\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u53ef\u80fd\u88ab\u4ece\u4e0a\u9762\u548c\u5de6\u9762\u8fc7\u6765\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\[F(i,j) = A(i,j) + \\max\\{F(i-1,j), F(i,j-1)\\}\\] \u5373\u4e24\u8005\u53d6\u5927\u3002\u8fb9\u754c\u662f\u663e\u7136\u7684 \\(0\\) \u3002 \u72b6\u6001 \\(F(i,j)\\) \u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\uff0c\u5373\u5b83\u662f\u8d70\u5230 \\((i,j)\\) \u4e0b\u7684\u6700\u4f18\u89e3\uff0c\u540e\u7eed\u7684\u89e3\u5efa\u7acb\u5728\u524d\u4e00\u4e2a\u5b50\u7ed3\u6784\u4e0a\uff0c\u81ea\u7136\u4e5f\u662f\u6700\u4f18\u89e3\u3002 01 \u80cc\u5305 \u2693\ufe0e \u7ed9\u5b9a \\(n\\) \u4e2a\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u4e3a \\(V_i\\) \uff0c\u4ef7\u503c\u4e3a \\(W_i\\) \u3002\u6709\u4e00\u5bb9\u79ef\u4e3a \\(M\\) \u7684\u80cc\u5305\uff0c\u6c42\u80cc\u5305\u5185\u80fd\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u8bbe\u72b6\u6001 \\(F(i,j)\\) \u662f\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u4e2d\u9009\u51fa\u4e86\u603b\u4f53\u79ef\u4e3a \\(j\\) \u7684\u7269\u54c1\u653e\u5165\u80cc\u5305\u540e\uff0c\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u82e5\u4e0d\u9009\u7b2c \\(i\\) \u4e2a\u7269\u54c1\uff0c\u5219 \\(F(i,j) = F(i-1,j)\\) \u3002 \u82e5\u9009\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u4e14 \\(j \\geqslant i\\) \uff0c\u5219 \\(F(i,j) = F(i-1,j-V_i) + W_i\\) \u3002 \u4e8e\u662f\u8f6c\u79fb\u65b9\u7a0b\u4e3a\u4e24\u8005\u53d6 \\(\\max\\) \u3002\u8fb9\u754c\u81ea\u7136\u4e3a \\(0\\) \u3002 1 2 3 4 5 6 7 f [ 0 ][ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j <= m ; j ++ ) f [ i ][ j ] = f [ i - 1 ][ j ]; for ( int j = v [ i ]; j <= m ; j ++ ) f [ i ][ j ] = max ( f [ i ][ j ], f [ i - 1 ][ j - v [ i ]] + w [ i ]); } \u6eda\u52a8\u6570\u7ec4 \u2693\ufe0e \u6ce8\u610f\u5230\u9636\u6bb5 \\(i\\) \u53ea\u548c\u4e0a\u4e00\u9636\u6bb5 \\(i-1\\) \u6709\u5173\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8ba9\u6570\u7ec4\u6eda\u52a8\u8d77\u6765\uff0c\u91cd\u590d\u5229\u7528\uff0c\u51cf\u6389\u4e00\u7ef4\u3002 \u7136\u800c\u5728\u7b2c \\(i\\) \u9636\u6bb5\u5185 \\(j\\) \u7684\u60c5\u51b5\u8f83\u590d\u6742\u3002 \\(F(i,j)\\) \u4f9d\u8d56\u4e8e \\(F(i,j-V_i)\\) \uff0c\u5373\u4f9d\u8d56 \\(j\\) \u662f\u5411\u524d\u7684\uff0c\u987a\u7740\u5faa\u73af\u524d\u9762\u5148\u88ab\u66f4\u65b0\uff0c\u540e\u9762\u4f9d\u8d56\u7684\u6570\u636e\u5c31\u6ca1\u4e86\u3002 \u600e\u4e48\u529e\uff1f\u8ba9\u5faa\u73af\u5012\u7740\u6765\uff0c\u8fd9\u6837\u540e\u9762\u7684\u5148\u66f4\u65b0\uff0c\u524d\u9762\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002 1 2 3 4 f [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = m ; j >= v [ i ]; j -- ) f [ j ] = max ( f [ j ], f [ j - v [ i ]] + w [ i ]); \u540c\u6837\uff0c\u77e9\u9635\u53d6\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u3002 \u5b8c\u5168\u80cc\u5305 \u2693\ufe0e \u7ed9\u5b9a \\(n\\) \u79cd\u7269\u54c1\uff0c\u7b2c \\(i\\) \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u4e3a \\(V_i\\) \uff0c\u4ef7\u503c\u4e3a \\(W_i\\) \uff0c\u6bcf\u79cd\u6709\u65e0\u9650\u4e2a\u3002\u6709\u4e00\u5bb9\u79ef\u4e3a \\(M\\) \u7684\u80cc\u5305\uff0c\u6c42\u80cc\u5305\u5185\u80fd\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u81ea\u5df1\u5c1d\u8bd5\u63a8\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\u6b63\u5e8f\u5faa\u73af\u6070\u597d\u662f\u6240\u6c42\u89e3\u3002 1 2 3 4 f [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = v [ i ]; j <= v [ i ]; j ++ ) f [ j ] = max ( f [ j ], f [ j - v [ i ]] + w [ i ]); \u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217 \u2693\ufe0e \u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217 \u2693\ufe0e \u7ea6\u745f\u592b\u95ee\u9898 \u2693\ufe0e \u6269\u5c55 \u00b7 \u533a\u95f4 DP \u2693\ufe0e \u6269\u5c55 \u00b7 \u6570\u4f4d DP \u2693\ufe0e \u4f8b\u9898 \u2693\ufe0e P1216 \u6570\u5b57\u4e09\u89d2\u5f62 P1176 \u8def\u5f84\u8ba1\u65702 P1048 \u91c7\u836f P1616 \u75af\u72c2\u7684\u91c7\u836f P5146 \u6700\u5927\u5dee\u503c P1002 \u8fc7\u6cb3\u5352 P1387 \u6700\u5927\u6b63\u65b9\u5f62 P1057 \u4f20\u7403\u6e38\u620f P1359 \u79df\u7528\u6e38\u8247 P1020 \u5bfc\u5f39\u62e6\u622a P1434 \u6ed1\u96ea","title":"\u52a8\u6001\u89c4\u5212"},{"location":"basic/dp/#\u52a8\u6001\u89c4\u5212","text":"\u52a8\u6001\u89c4\u5212\u7684\u201c\u72b6\u6001\u201d\u548c\u201c\u8f6c\u79fb\u201d\u7b49\u6982\u5ff5\u53ef\u80fd\u8f83\u4e3a\u62bd\u8c61\uff0c\u4e5f\u8fc7\u4e8e\u7075\u6d3b\uff0c\u6211\u5217\u51fa\u4e86\u8f83\u591a\u7684\u4f8b\u9898\u5e2e\u52a9\u601d\u8003\u3002 \u52a8\u6001\u89c4\u5212\u7684\u96be\u70b9\u5728\u4e8e\u72b6\u6001\u8bbe\u8ba1\u548c\u5b50\u7ed3\u6784\u7684\u6316\u6398\u3002","title":"\u52a8\u6001\u89c4\u5212"},{"location":"basic/dp/#\u539f\u7406","text":"\u5bf9\u4e8e\u9012\u63a8\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u8fdb\u4e00\u6b65\u62bd\u8c61\u3002 \u8fd8\u662f Fibonacci \u6570\u5217\uff0c\u6211\u4eec\u628a \\(F_i\\) \u79f0\u4e3a\u4e00\u4e2a\u72b6\u6001\u3002\u8fd9\u4e2a\u72b6\u6001\u7531 \\(F_{i-1}\\) \u548c \\(F_{i-2}\\) \u8f6c\u79fb\uff1a \\[F_{i} = F_{i-1} + F_{i-2}\\] \u6b64\u516c\u5f0f\u79f0\u4e3a\u52a8\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5b83\u63cf\u8ff0\u4e86\u72b6\u6001\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u6700\u540e\u662f\u8fb9\u754c \\(F_1=F_2=1\\) \u3002 \u5f88\u7b80\u5355\u5427\uff1f\u6765\u70b9\u57fa\u7840\u6a21\u578b\u3002","title":"\u539f\u7406"},{"location":"basic/dp/#\u77e9\u9635\u53d6\u6570","text":"\u7ed9\u5b9a\u4e00\u4e2a \\(m \\times n\\) \u7684\u77e9\u9635 \\(A\\) \uff08\u6570\u5b57\u4e09\u89d2\u5f62\u4e5f\u5dee\u4e0d\u591a\uff09\uff0c\u4ece\u5de6\u4e0a\u89d2\u5f00\u59cb\uff0c\u53ea\u80fd\u5411\u4e0b\u6216\u5411\u53f3\u8d70\uff0c\u6c42\u8def\u8fc7\u6240\u6709\u6570\u5b57\u4e4b\u548c\u6700\u5927\u503c\u3002 \u53ef\u4ee5\u5148\u601d\u8003\u4e00\u4e0b\uff0c\u8fd9\u9053\u9898\u600e\u4e48\u8bbe\u72b6\u6001\u6bd4\u8f83\u597d\u3002 \u5b9a\u4e49\u72b6\u6001 \\(F(i,j)\\) \u4e3a\u505c\u5728\u4f4d\u7f6e \\((i,j)\\) \u7684\u6240\u6709\u8def\u5f84\u4e2d\uff0c\u8def\u8fc7\u6570\u5b57\u4e4b\u548c\u7684\u6700\u5927\u503c\u3002 \u800c\u4e14\u7531\u9898\u77e5\uff0c\u4e00\u4e2a\u4f4d\u7f6e\u53ea\u53ef\u80fd\u88ab\u4ece\u4e0a\u9762\u548c\u5de6\u9762\u8fc7\u6765\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \\[F(i,j) = A(i,j) + \\max\\{F(i-1,j), F(i,j-1)\\}\\] \u5373\u4e24\u8005\u53d6\u5927\u3002\u8fb9\u754c\u662f\u663e\u7136\u7684 \\(0\\) \u3002 \u72b6\u6001 \\(F(i,j)\\) \u5177\u6709\u6700\u4f18\u5b50\u7ed3\u6784\u6027\uff0c\u5373\u5b83\u662f\u8d70\u5230 \\((i,j)\\) \u4e0b\u7684\u6700\u4f18\u89e3\uff0c\u540e\u7eed\u7684\u89e3\u5efa\u7acb\u5728\u524d\u4e00\u4e2a\u5b50\u7ed3\u6784\u4e0a\uff0c\u81ea\u7136\u4e5f\u662f\u6700\u4f18\u89e3\u3002","title":"\u77e9\u9635\u53d6\u6570"},{"location":"basic/dp/#01-\u80cc\u5305","text":"\u7ed9\u5b9a \\(n\\) \u4e2a\u7269\u54c1\uff0c\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u7684\u4f53\u79ef\u4e3a \\(V_i\\) \uff0c\u4ef7\u503c\u4e3a \\(W_i\\) \u3002\u6709\u4e00\u5bb9\u79ef\u4e3a \\(M\\) \u7684\u80cc\u5305\uff0c\u6c42\u80cc\u5305\u5185\u80fd\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u8bbe\u72b6\u6001 \\(F(i,j)\\) \u662f\u4ece\u524d \\(i\\) \u4e2a\u7269\u54c1\u4e2d\u9009\u51fa\u4e86\u603b\u4f53\u79ef\u4e3a \\(j\\) \u7684\u7269\u54c1\u653e\u5165\u80cc\u5305\u540e\uff0c\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u82e5\u4e0d\u9009\u7b2c \\(i\\) \u4e2a\u7269\u54c1\uff0c\u5219 \\(F(i,j) = F(i-1,j)\\) \u3002 \u82e5\u9009\u7b2c \\(i\\) \u4e2a\u7269\u54c1\u4e14 \\(j \\geqslant i\\) \uff0c\u5219 \\(F(i,j) = F(i-1,j-V_i) + W_i\\) \u3002 \u4e8e\u662f\u8f6c\u79fb\u65b9\u7a0b\u4e3a\u4e24\u8005\u53d6 \\(\\max\\) \u3002\u8fb9\u754c\u81ea\u7136\u4e3a \\(0\\) \u3002 1 2 3 4 5 6 7 f [ 0 ][ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) { for ( int j = 0 ; j <= m ; j ++ ) f [ i ][ j ] = f [ i - 1 ][ j ]; for ( int j = v [ i ]; j <= m ; j ++ ) f [ i ][ j ] = max ( f [ i ][ j ], f [ i - 1 ][ j - v [ i ]] + w [ i ]); }","title":"01 \u80cc\u5305"},{"location":"basic/dp/#\u6eda\u52a8\u6570\u7ec4","text":"\u6ce8\u610f\u5230\u9636\u6bb5 \\(i\\) \u53ea\u548c\u4e0a\u4e00\u9636\u6bb5 \\(i-1\\) \u6709\u5173\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u8ba9\u6570\u7ec4\u6eda\u52a8\u8d77\u6765\uff0c\u91cd\u590d\u5229\u7528\uff0c\u51cf\u6389\u4e00\u7ef4\u3002 \u7136\u800c\u5728\u7b2c \\(i\\) \u9636\u6bb5\u5185 \\(j\\) \u7684\u60c5\u51b5\u8f83\u590d\u6742\u3002 \\(F(i,j)\\) \u4f9d\u8d56\u4e8e \\(F(i,j-V_i)\\) \uff0c\u5373\u4f9d\u8d56 \\(j\\) \u662f\u5411\u524d\u7684\uff0c\u987a\u7740\u5faa\u73af\u524d\u9762\u5148\u88ab\u66f4\u65b0\uff0c\u540e\u9762\u4f9d\u8d56\u7684\u6570\u636e\u5c31\u6ca1\u4e86\u3002 \u600e\u4e48\u529e\uff1f\u8ba9\u5faa\u73af\u5012\u7740\u6765\uff0c\u8fd9\u6837\u540e\u9762\u7684\u5148\u66f4\u65b0\uff0c\u524d\u9762\u4e0d\u4f1a\u88ab\u5f71\u54cd\u3002 1 2 3 4 f [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = m ; j >= v [ i ]; j -- ) f [ j ] = max ( f [ j ], f [ j - v [ i ]] + w [ i ]); \u540c\u6837\uff0c\u77e9\u9635\u53d6\u6570\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u3002","title":"\u6eda\u52a8\u6570\u7ec4"},{"location":"basic/dp/#\u5b8c\u5168\u80cc\u5305","text":"\u7ed9\u5b9a \\(n\\) \u79cd\u7269\u54c1\uff0c\u7b2c \\(i\\) \u79cd\u7269\u54c1\u7684\u4f53\u79ef\u4e3a \\(V_i\\) \uff0c\u4ef7\u503c\u4e3a \\(W_i\\) \uff0c\u6bcf\u79cd\u6709\u65e0\u9650\u4e2a\u3002\u6709\u4e00\u5bb9\u79ef\u4e3a \\(M\\) \u7684\u80cc\u5305\uff0c\u6c42\u80cc\u5305\u5185\u80fd\u653e\u4e0b\u7684\u6700\u5927\u4ef7\u503c\u3002 \u81ea\u5df1\u5c1d\u8bd5\u63a8\u4e00\u4e0b\uff0c\u4f1a\u53d1\u73b0\u6b63\u5e8f\u5faa\u73af\u6070\u597d\u662f\u6240\u6c42\u89e3\u3002 1 2 3 4 f [ 0 ] = 0 ; for ( int i = 0 ; i < n ; i ++ ) for ( int j = v [ i ]; j <= v [ i ]; j ++ ) f [ j ] = max ( f [ j ], f [ j - v [ i ]] + w [ i ]);","title":"\u5b8c\u5168\u80cc\u5305"},{"location":"basic/dp/#\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217","text":"","title":"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"},{"location":"basic/dp/#\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217","text":"","title":"\u6700\u957f\u4e0d\u4e0b\u964d\u5b50\u5e8f\u5217"},{"location":"basic/dp/#\u7ea6\u745f\u592b\u95ee\u9898","text":"","title":"\u7ea6\u745f\u592b\u95ee\u9898"},{"location":"basic/dp/#\u6269\u5c55--\u533a\u95f4-dp","text":"","title":"\u6269\u5c55 \u00b7 \u533a\u95f4 DP"},{"location":"basic/dp/#\u6269\u5c55--\u6570\u4f4d-dp","text":"","title":"\u6269\u5c55 \u00b7 \u6570\u4f4d DP"},{"location":"basic/dp/#\u4f8b\u9898","text":"P1216 \u6570\u5b57\u4e09\u89d2\u5f62 P1176 \u8def\u5f84\u8ba1\u65702 P1048 \u91c7\u836f P1616 \u75af\u72c2\u7684\u91c7\u836f P5146 \u6700\u5927\u5dee\u503c P1002 \u8fc7\u6cb3\u5352 P1387 \u6700\u5927\u6b63\u65b9\u5f62 P1057 \u4f20\u7403\u6e38\u620f P1359 \u79df\u7528\u6e38\u8247 P1020 \u5bfc\u5f39\u62e6\u622a P1434 \u6ed1\u96ea","title":"\u4f8b\u9898"},{"location":"basic/end/","text":"\u7ed3\u8bed \u2693\ufe0e \u57fa\u7840\u7b97\u6cd5\u7684\u5b66\u4e60\u81f3\u6b64\u544a\u4e00\u6bb5\u843d\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u6311\u9009\u611f\u5174\u8da3\u7684\u90e8\u5206\u5b66\u4e60\u3002","title":"\u7ed3\u8bed"},{"location":"basic/end/#\u7ed3\u8bed","text":"\u57fa\u7840\u7b97\u6cd5\u7684\u5b66\u4e60\u81f3\u6b64\u544a\u4e00\u6bb5\u843d\u3002 \u63a5\u4e0b\u6765\u53ef\u4ee5\u6311\u9009\u611f\u5174\u8da3\u7684\u90e8\u5206\u5b66\u4e60\u3002","title":"\u7ed3\u8bed"},{"location":"basic/example/","text":"\u4f18\u5316\u4f8b\u9898 \u2693\ufe0e CCF 1034 \u949e\u7968\u5151\u6362 \u00b7 \u679a\u4e3e\u4f18\u5316 \u2693\ufe0e \u9898\u76ee\u94fe\u63a5\uff1a CCF 1034 \u949e\u7968\u5151\u6362 \u3002 \u9898\u76ee\u5927\u610f\uff1a\u5c06\u4efb\u610f\u7ed9\u5b9a\u7684\u6574\u767e\u5143\u949e\u7968\uff0c\u5151\u6362\u621010\u5143\u300120\u5143\u300150\u5143\u5c0f\u949e\u7968\u5f62\u5f0f\u3002\u8f93\u51fa\u5151\u6362\u65b9\u6848\u603b\u6570\u3002 \u6570\u636e\u8303\u56f4\uff1a\u8f93\u5165\u9700\u8981\u5151\u6362\u7684\u949e\u7968\u603b\u6570 \\(n\\) \uff0c \\(100 \\leqslant n \\leqslant 1.7 \\times 10^{11}\\) \u601d\u8def 0 \u2693\ufe0e \u7b80\u5355\u8d77\u89c1\uff0c\u8bb0\u5151\u6362\u5f97\u5230 \\(10\\) \u5143 \\(a\\) \u5f20\uff0c \\(20\\) \u5143 \\(b\\) \u5f20\uff0c \\(50\\) \u5143 \\(c\\) \u5f20\uff0c\u5e76\u8bb0 \\(n=100k\\) \u3002 \u53ea\u9700\u6d4b\u8bd5 \\(10a+20b+50c = 100k\\) \uff0c\u66b4\u529b\u662f\u663e\u7136\u7684\u3002 1 2 3 4 5 6 7 8 for ( int c = 0 ; c <= n / 50 ; c ++ ) { for ( int b = 0 ; b <= n / 20 ; b ++ ) { for ( int a = 0 ; a <= n / 10 ; a ++ ) { if ( a * 10 + b * 20 + c * 50 == n ) sum ++ ; } } } \u4f18\u5316 1 \u2693\ufe0e \u6ce8\u610f\u5230 \\(a = 10k - 5c - 2b\\) \uff0c\u5373\u5f53 \\(b,c\\) \u786e\u5b9a\u65f6\u53ef\u4ee5\u8ba1\u7b97\u51fa \\(a\\) \uff0c\u5224\u65ad\u662f\u5426 \\(a \\geqslant 0\\) \u5373\u53ef\u3002 \u5982\u6b64\u53ef\u4ee5\u6d88\u6389\u4e00\u5c42\u5faa\u73af\u3002 1 2 3 4 5 6 for ( int c = 0 ; c <= n / 50 ; c ++ ) { for ( int b = 0 ; b <= n / 20 ; b ++ ) { if ( n / 10 - 5 * c - 2 * b >= 0 ) sum ++ ; } } \u4f18\u5316 2 \u2693\ufe0e \u5bf9 \\(a \\geqslant 0\\) \u6c42\u89e3\uff0c\u5f97\u5230 \\(b \\leqslant 5k-2.5c\\) \u3002\u56e0\u6b64 \\(b\\) \u662f \\([0,5k-2.5c]\\) \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u53c8\u6d88\u6389\u4e00\u5c42\u3002 1 2 3 for ( int c = 0 ; c <= n / 50 ; c ++ ) { sum += ( n - 50 * c ) / 20 + 1 ; } \u4f18\u5316 3 \u2693\ufe0e \u4f18\u5316 2 \u4e2d\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6c42\u548c\u5f0f\uff0c\u5176\u5b9e\u53ef\u4ee5\u5bf9\u6c42\u548c\u5f0f\u76f4\u63a5\u8ba1\u7b97\u3002\u63d0\u51fa\u9996\u9879 \\[\\sum_{i=0}^{2k}\\left(\\lfloor 5k-2.5i \\rfloor + 1\\right) = 5k + \\sum_{i=1}^{2k}\\lfloor 5k-2.5i \\rfloor + 2k\\] \u5206\u5947\u5076\u5c55\u5f00\u6709 \\[\\begin{aligned} \\sum_{i=1}^{2k}\\lfloor 5k-2.5i \\rfloor &= \\sum_{i=1}^{k}\\lfloor 5k-2.5(2i-1) \\rfloor + \\sum_{i=1}^{k}\\lfloor 5k-2.5(2i) \\rfloor \\\\&= \\sum_{i=1}^{k}(10k-10i+2) = 5k^2 -3k + 1\\end{aligned}\\] \u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801 1 sum = ( 5 * k + 4 ) * k + 1 ; \u63d0\u793a \u76f4\u63a5\u6284\u662f\u8fc7\u4e0d\u4e86\u9898\u7684\uff0c\u89c2\u5bdf\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u3002 \u6709\u65f6\u5019\u62ff\u4e0d\u4e86\u5168\u5206\uff0c\u4e5f\u8981\u4e89\u53d6\u90e8\u5206\u5206\u3002 \u4e09\u601d\u800c\u540e\u884c\u3002","title":"\u4f18\u5316\u4f8b\u9898"},{"location":"basic/example/#\u4f18\u5316\u4f8b\u9898","text":"","title":"\u4f18\u5316\u4f8b\u9898"},{"location":"basic/example/#ccf-1034-\u949e\u7968\u5151\u6362--\u679a\u4e3e\u4f18\u5316","text":"\u9898\u76ee\u94fe\u63a5\uff1a CCF 1034 \u949e\u7968\u5151\u6362 \u3002 \u9898\u76ee\u5927\u610f\uff1a\u5c06\u4efb\u610f\u7ed9\u5b9a\u7684\u6574\u767e\u5143\u949e\u7968\uff0c\u5151\u6362\u621010\u5143\u300120\u5143\u300150\u5143\u5c0f\u949e\u7968\u5f62\u5f0f\u3002\u8f93\u51fa\u5151\u6362\u65b9\u6848\u603b\u6570\u3002 \u6570\u636e\u8303\u56f4\uff1a\u8f93\u5165\u9700\u8981\u5151\u6362\u7684\u949e\u7968\u603b\u6570 \\(n\\) \uff0c \\(100 \\leqslant n \\leqslant 1.7 \\times 10^{11}\\)","title":"CCF 1034 \u949e\u7968\u5151\u6362 \u00b7 \u679a\u4e3e\u4f18\u5316"},{"location":"basic/example/#\u601d\u8def-0","text":"\u7b80\u5355\u8d77\u89c1\uff0c\u8bb0\u5151\u6362\u5f97\u5230 \\(10\\) \u5143 \\(a\\) \u5f20\uff0c \\(20\\) \u5143 \\(b\\) \u5f20\uff0c \\(50\\) \u5143 \\(c\\) \u5f20\uff0c\u5e76\u8bb0 \\(n=100k\\) \u3002 \u53ea\u9700\u6d4b\u8bd5 \\(10a+20b+50c = 100k\\) \uff0c\u66b4\u529b\u662f\u663e\u7136\u7684\u3002 1 2 3 4 5 6 7 8 for ( int c = 0 ; c <= n / 50 ; c ++ ) { for ( int b = 0 ; b <= n / 20 ; b ++ ) { for ( int a = 0 ; a <= n / 10 ; a ++ ) { if ( a * 10 + b * 20 + c * 50 == n ) sum ++ ; } } }","title":"\u601d\u8def 0"},{"location":"basic/example/#\u4f18\u5316-1","text":"\u6ce8\u610f\u5230 \\(a = 10k - 5c - 2b\\) \uff0c\u5373\u5f53 \\(b,c\\) \u786e\u5b9a\u65f6\u53ef\u4ee5\u8ba1\u7b97\u51fa \\(a\\) \uff0c\u5224\u65ad\u662f\u5426 \\(a \\geqslant 0\\) \u5373\u53ef\u3002 \u5982\u6b64\u53ef\u4ee5\u6d88\u6389\u4e00\u5c42\u5faa\u73af\u3002 1 2 3 4 5 6 for ( int c = 0 ; c <= n / 50 ; c ++ ) { for ( int b = 0 ; b <= n / 20 ; b ++ ) { if ( n / 10 - 5 * c - 2 * b >= 0 ) sum ++ ; } }","title":"\u4f18\u5316 1"},{"location":"basic/example/#\u4f18\u5316-2","text":"\u5bf9 \\(a \\geqslant 0\\) \u6c42\u89e3\uff0c\u5f97\u5230 \\(b \\leqslant 5k-2.5c\\) \u3002\u56e0\u6b64 \\(b\\) \u662f \\([0,5k-2.5c]\\) \u4e4b\u95f4\u7684\u6574\u6570\uff0c\u53c8\u6d88\u6389\u4e00\u5c42\u3002 1 2 3 for ( int c = 0 ; c <= n / 50 ; c ++ ) { sum += ( n - 50 * c ) / 20 + 1 ; }","title":"\u4f18\u5316 2"},{"location":"basic/example/#\u4f18\u5316-3","text":"\u4f18\u5316 2 \u4e2d\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u6c42\u548c\u5f0f\uff0c\u5176\u5b9e\u53ef\u4ee5\u5bf9\u6c42\u548c\u5f0f\u76f4\u63a5\u8ba1\u7b97\u3002\u63d0\u51fa\u9996\u9879 \\[\\sum_{i=0}^{2k}\\left(\\lfloor 5k-2.5i \\rfloor + 1\\right) = 5k + \\sum_{i=1}^{2k}\\lfloor 5k-2.5i \\rfloor + 2k\\] \u5206\u5947\u5076\u5c55\u5f00\u6709 \\[\\begin{aligned} \\sum_{i=1}^{2k}\\lfloor 5k-2.5i \\rfloor &= \\sum_{i=1}^{k}\\lfloor 5k-2.5(2i-1) \\rfloor + \\sum_{i=1}^{k}\\lfloor 5k-2.5(2i) \\rfloor \\\\&= \\sum_{i=1}^{k}(10k-10i+2) = 5k^2 -3k + 1\\end{aligned}\\] \u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801 1 sum = ( 5 * k + 4 ) * k + 1 ; \u63d0\u793a \u76f4\u63a5\u6284\u662f\u8fc7\u4e0d\u4e86\u9898\u7684\uff0c\u89c2\u5bdf\u4e00\u4e0b\u6570\u636e\u8303\u56f4\u3002 \u6709\u65f6\u5019\u62ff\u4e0d\u4e86\u5168\u5206\uff0c\u4e5f\u8981\u4e89\u53d6\u90e8\u5206\u5206\u3002 \u4e09\u601d\u800c\u540e\u884c\u3002","title":"\u4f18\u5316 3"},{"location":"basic/greedy/","text":"\u8d2a\u5fc3 \u2693\ufe0e \u5728\u7b97\u6cd5\u601d\u60f3\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8d2a\u5fc3\u7684\u601d\u60f3\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u8c08\u8c08\u5e94\u7528\u3002 P4995 \u8df3\u8df3\uff01 \u2693\ufe0e \u7ed9\u5b9a\u77f3\u5934\u7684\u9ad8\u5ea6 \\(h\\) \uff0c\u4ece\u7b2c \\(i\\) \u5757\u77f3\u5934\u8df3\u5230\u7b2c \\(j\\) \u5757\u4e0a\u8017\u8d39\u4f53\u529b \\((h_i-h_j)^2\\) \uff0c\u6c42\u6700\u8017\u4f53\u529b\u7684\u8def\u5f84\u3002 \u51ed\u501f\u4e00\u4e9b\u6570\u5b66\u7684\u7075\u611f\uff0c\u53ef\u4ee5\u731c\u5230\u662f\u5728\u5269\u4f59\u7684\u77f3\u5934\u4e2d\uff0c\u9ad8\u5ea6\u5dee\u5f53\u524d\u6700\u5927\u7684\u6765\u56de\u8df3\u3002\u5373\u201c\u5927\u5c0f\u5927\u5c0f\u201d\u8fd9\u6837\u53cd\u590d\u6a2a\u8df3\u3002 \u5982\u4f55\u8bc1\u660e\u5462\uff1f\u5047\u8bbe \\(h_i\\) \u5df2\u7ecf\u662f\u8981\u8df3\u7684\u5e8f\u5217\u3002\u5c55\u5f00\u6c42\u548c\u5f0f \\[S = \\sum_{k=1}^{n-1}(h_k-h_{k+1})^2 = \\sum_{k=1}^nh_k^2 - 2\\sum_{k=1}^{n-1}h_kh_{k+1}\\] \u6ce8\u610f\u5230\u5e73\u65b9\u548c\u4e3a\u4e00\u4e2a\u5b9a\u503c\uff0c\u91cd\u70b9\u5728\u540e\u534a\u5f0f\u3002\u8bb0 \\(H_{k} = h_{k+1}\\) \uff0c\u6709 \\[\\sum_{k=1}^{n-1}h_kH_k\\] \u5229\u7528\u9ad8\u4e2d\u65f6\u5b66\u7684\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u6709 \\[\u53cd\u5e8f\u548c \\leqslant \u4e71\u5e8f\u548c \\leqslant \u987a\u5e8f\u548c\\] \u76f4\u63a5\u6709\u53cd\u5e8f\u6700\u5c0f\u3002 \u7ec3\u4e60 \u2693\ufe0e P4995 \u8df3\u8df3\uff01 P1803 \u51cc\u4e71\u7684yyy / \u7ebf\u6bb5\u8986\u76d6 P5019 \u94fa\u8bbe\u9053\u8def","title":"\u8d2a\u5fc3"},{"location":"basic/greedy/#\u8d2a\u5fc3","text":"\u5728\u7b97\u6cd5\u601d\u60f3\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8d2a\u5fc3\u7684\u601d\u60f3\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u8c08\u8c08\u5e94\u7528\u3002","title":"\u8d2a\u5fc3"},{"location":"basic/greedy/#p4995-\u8df3\u8df3","text":"\u7ed9\u5b9a\u77f3\u5934\u7684\u9ad8\u5ea6 \\(h\\) \uff0c\u4ece\u7b2c \\(i\\) \u5757\u77f3\u5934\u8df3\u5230\u7b2c \\(j\\) \u5757\u4e0a\u8017\u8d39\u4f53\u529b \\((h_i-h_j)^2\\) \uff0c\u6c42\u6700\u8017\u4f53\u529b\u7684\u8def\u5f84\u3002 \u51ed\u501f\u4e00\u4e9b\u6570\u5b66\u7684\u7075\u611f\uff0c\u53ef\u4ee5\u731c\u5230\u662f\u5728\u5269\u4f59\u7684\u77f3\u5934\u4e2d\uff0c\u9ad8\u5ea6\u5dee\u5f53\u524d\u6700\u5927\u7684\u6765\u56de\u8df3\u3002\u5373\u201c\u5927\u5c0f\u5927\u5c0f\u201d\u8fd9\u6837\u53cd\u590d\u6a2a\u8df3\u3002 \u5982\u4f55\u8bc1\u660e\u5462\uff1f\u5047\u8bbe \\(h_i\\) \u5df2\u7ecf\u662f\u8981\u8df3\u7684\u5e8f\u5217\u3002\u5c55\u5f00\u6c42\u548c\u5f0f \\[S = \\sum_{k=1}^{n-1}(h_k-h_{k+1})^2 = \\sum_{k=1}^nh_k^2 - 2\\sum_{k=1}^{n-1}h_kh_{k+1}\\] \u6ce8\u610f\u5230\u5e73\u65b9\u548c\u4e3a\u4e00\u4e2a\u5b9a\u503c\uff0c\u91cd\u70b9\u5728\u540e\u534a\u5f0f\u3002\u8bb0 \\(H_{k} = h_{k+1}\\) \uff0c\u6709 \\[\\sum_{k=1}^{n-1}h_kH_k\\] \u5229\u7528\u9ad8\u4e2d\u65f6\u5b66\u7684\u6392\u5e8f\u4e0d\u7b49\u5f0f\uff0c\u6709 \\[\u53cd\u5e8f\u548c \\leqslant \u4e71\u5e8f\u548c \\leqslant \u987a\u5e8f\u548c\\] \u76f4\u63a5\u6709\u53cd\u5e8f\u6700\u5c0f\u3002","title":"P4995 \u8df3\u8df3\uff01"},{"location":"basic/greedy/#\u7ec3\u4e60","text":"P4995 \u8df3\u8df3\uff01 P1803 \u51cc\u4e71\u7684yyy / \u7ebf\u6bb5\u8986\u76d6 P5019 \u94fa\u8bbe\u9053\u8def","title":"\u7ec3\u4e60"},{"location":"basic/prefix-sum/","text":"\u524d\u7f00\u548c & \u5dee\u5206 \u2693\ufe0e \u524d\u7f00\u548c\u662f\u9884\u5904\u7406\u601d\u60f3\u7684\u4e00\u4e2a\u5e94\u7528\uff0c\u63d0\u524d\u8ba1\u7b97\u597d\u6570\u7ec4\u7684\u548c\uff0c\u9700\u8981\u65f6\u76f4\u63a5\u4f7f\u7528\uff0c\u52a0\u5feb\u901f\u5ea6\u3002 \u52c9\u5f3a\u7b97\u662f\u201c\u6570\u636e\u7ed3\u6784\u201d\u5427\u3002 P5638 \u5149\u9a93\u8005\u7684\u8363\u8000 \u2693\ufe0e \u9898\u76ee\u94fe\u63a5\uff1a P5638 \u5149\u9a93\u8005\u7684\u8363\u8000 \u9898\u76ee\u5927\u610f\uff1a\u53ef\u8df3\u8fc7\u8fde\u7eed\u7684 \\(k\\) \u9879\uff0c\u6c42\u7ecf\u8fc7\u8fb9\u7684\u548c\u7684\u6700\u5c0f\u503c\u3002 \u80af\u5b9a\u662f\u6b63\u7740\u8df3\uff0c\u66b4\u529b\u4e5f\u662f\u663e\u7136\u7684\uff0c\u5bf9\u7ed3\u679c\u53d6 \\(\\max\\) \u3002\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 int aa [ MAXN ], n ; int ans = 0x3f3f3f3f ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int sum = 0 ; for ( int j = 0 ; j < i ; j ++ ) { sum += aa [ j ]; } for ( int j = i + k ; j < n - 1 ; j ++ ) { sum += aa [ j ]; } ans = min ( ans , sum ); } return ans ; \u4f18\u5316 1 \u2693\ufe0e \u5f88\u663e\u7136\u8d85\u65f6\u7684\u539f\u56e0\u662f\u6211\u4eec\u6bcf\u6b21\u90fd\u505a\u4e86\u5f88\u591a\u91cd\u590d\u8ba1\u7b97\uff0c\u4e3b\u8981\u662f\u5728\u6c42\u548c\u3002 \u600e\u4e48\u6c42\u548c\u66f4\u5feb\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u7528\u524d\u7f00\u548c\u4f18\u5316\u4e86\u3002\u8003\u8651\u9884\u5904\u7406\u6570\u7ec4 \\(a\\) \u7684\u524d\u7f00\u548c \\(s_i = \\displaystyle\\sum_{k=1}^ia_k\\) 1 2 3 4 5 6 7 int aa [ MAXN ], ss [ MAXN ]; // init... int sum = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { sum += aa [ i ]; ss [ i ] = sum ; } \u5f53\u6211\u4eec\u60f3\u8ba1\u7b97 \\(l\\) \u5230 \\(r\\) \u4e4b\u95f4\u6570\u7ec4 \\(a\\) \u7684\u548c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \\(s_r-s_{l-1}\\) \uff0c\u4e0d\u5fc5\u6bcf\u4e00\u6b21\u518d\u91cd\u65b0\u8ba1\u7b97\u3002 \u4e8e\u662f\u53ef\u4ee5\u4f18\u5316\u5f97\u5230 1 2 3 4 5 6 7 int aa [ MAXN ], n , ss [ MAXN ]; // init... int ans = 0x3f3f3f3f ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int sum = ss [ i - 1 ] + s [ n - 2 ] - s [ i + k -1 ]; ans = min ( ans , sum ); } \u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u6570\u7ec4 \\(a\\) \u5e76\u6ca1\u6709\u4ec0\u4e48\u4fdd\u5b58\u7684\u4ef7\u503c\uff0c\u53ef\u4ee5\u5220\u53bb\uff0c\u4f18\u5316\u5185\u5b58\u3002 \u4f18\u5316 2 \u2693\ufe0e \u53ef\u80fd\u6709\u540c\u5b66\u60f3\u5230\u4e86\u53e6\u4e00\u79cd\u89e3\u6cd5\uff0c\u8fd9\u91cc\u4e5f\u8bb2\u4e00\u4e0b\u3002 \u6ce8\u610f\u5230\uff0c\u7b54\u6848\u53ef\u4ee5\u770b\u6210\u4e24\u6bb5\u548c\u76f8\u52a0\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u5168\u90e8\u7684\u548c\u51cf\u53bb \\(k\\) \u4e2a\uff0c\u800c\u5168\u90e8\u7684\u548c\u662f\u56fa\u5b9a\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e00\u79cd\u961f\u5217\u7684\u65b9\u5f0f\uff0c\u7ef4\u62a4\u4ece \\(l\\) \u5f00\u59cb\u5230 \\(r\\) \u7ed3\u675f\u7684\u8fde\u7eed\u4e00\u6bb5\u6570\u5b57\u7684\u548c \\(s\\) \u3002\u5f53\u6c42\u548c\u6bb5\u5411\u53f3\u79fb\u52a8\u65f6\uff0c\u53ea\u9700 \\(s' = s - a_l + a_{r+1}\\) \u3002 1 2 3 4 5 6 7 8 9 10 // init... int tsum = 0 ; for ( int i = 0 ; i < k ; i ++ ) tsum += aa [ i ]; int ans = tsum ; for ( int i = k ; i < n - 1 ; i ++ ) { tsum = tsum + aa [ i ] - aa [ i - k ]; ans = max ( ans , t ); } return sum - ans ; \u5dee\u5206 \u2693\ufe0e \u7c7b\u4f3c\u7684\uff0c\u6709\u524d\u7f00\u548c\uff0c\u5c31\u6709\u5dee\u5206\u3002\u5dee\u5206\u6570\u7ec4\u7684\u524d\u7f00\u548c\u662f\u539f\u6570\u7ec4\u3002 \u5dee\u5206\u6709\u4ec0\u4e48\u7528\u5462\uff1f \u5dee\u5206\u53ef\u4ee5\u628a\u201c\u533a\u95f4\u589e\u52a0\u201d\u53d8\u6210\u201c\u5355\u70b9\u589e\u52a0\u201d\u3002\u8be6\u7ec6\u89c1 P2367 \u8bed\u6587\u6210\u7ee9 \u3002 \u4f8b\u9898 \u2693\ufe0e P5638 \u5149\u9a93\u8005\u7684\u8363\u8000 P2367 \u8bed\u6587\u6210\u7ee9 \u6269\u5c55 \u00b7 \u4e8c\u7ef4\u524d\u7f00\u548c \u2693\ufe0e \u6269\u5c55 \u00b7 \u9ad8\u7ef4\u524d\u7f00\u548c \u2693\ufe0e","title":"\u524d\u7f00\u548c & \u5dee\u5206"},{"location":"basic/prefix-sum/#\u524d\u7f00\u548c--\u5dee\u5206","text":"\u524d\u7f00\u548c\u662f\u9884\u5904\u7406\u601d\u60f3\u7684\u4e00\u4e2a\u5e94\u7528\uff0c\u63d0\u524d\u8ba1\u7b97\u597d\u6570\u7ec4\u7684\u548c\uff0c\u9700\u8981\u65f6\u76f4\u63a5\u4f7f\u7528\uff0c\u52a0\u5feb\u901f\u5ea6\u3002 \u52c9\u5f3a\u7b97\u662f\u201c\u6570\u636e\u7ed3\u6784\u201d\u5427\u3002","title":"\u524d\u7f00\u548c &amp; \u5dee\u5206"},{"location":"basic/prefix-sum/#p5638-\u5149\u9a93\u8005\u7684\u8363\u8000","text":"\u9898\u76ee\u94fe\u63a5\uff1a P5638 \u5149\u9a93\u8005\u7684\u8363\u8000 \u9898\u76ee\u5927\u610f\uff1a\u53ef\u8df3\u8fc7\u8fde\u7eed\u7684 \\(k\\) \u9879\uff0c\u6c42\u7ecf\u8fc7\u8fb9\u7684\u548c\u7684\u6700\u5c0f\u503c\u3002 \u80af\u5b9a\u662f\u6b63\u7740\u8df3\uff0c\u66b4\u529b\u4e5f\u662f\u663e\u7136\u7684\uff0c\u5bf9\u7ed3\u679c\u53d6 \\(\\max\\) \u3002\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 int aa [ MAXN ], n ; int ans = 0x3f3f3f3f ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int sum = 0 ; for ( int j = 0 ; j < i ; j ++ ) { sum += aa [ j ]; } for ( int j = i + k ; j < n - 1 ; j ++ ) { sum += aa [ j ]; } ans = min ( ans , sum ); } return ans ;","title":"P5638 \u5149\u9a93\u8005\u7684\u8363\u8000"},{"location":"basic/prefix-sum/#\u4f18\u5316-1","text":"\u5f88\u663e\u7136\u8d85\u65f6\u7684\u539f\u56e0\u662f\u6211\u4eec\u6bcf\u6b21\u90fd\u505a\u4e86\u5f88\u591a\u91cd\u590d\u8ba1\u7b97\uff0c\u4e3b\u8981\u662f\u5728\u6c42\u548c\u3002 \u600e\u4e48\u6c42\u548c\u66f4\u5feb\u5462\uff1f\u8fd9\u5c31\u9700\u8981\u7528\u524d\u7f00\u548c\u4f18\u5316\u4e86\u3002\u8003\u8651\u9884\u5904\u7406\u6570\u7ec4 \\(a\\) \u7684\u524d\u7f00\u548c \\(s_i = \\displaystyle\\sum_{k=1}^ia_k\\) 1 2 3 4 5 6 7 int aa [ MAXN ], ss [ MAXN ]; // init... int sum = 0 ; for ( int i = 0 ; i < n - 1 ; i ++ ) { sum += aa [ i ]; ss [ i ] = sum ; } \u5f53\u6211\u4eec\u60f3\u8ba1\u7b97 \\(l\\) \u5230 \\(r\\) \u4e4b\u95f4\u6570\u7ec4 \\(a\\) \u7684\u548c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 \\(s_r-s_{l-1}\\) \uff0c\u4e0d\u5fc5\u6bcf\u4e00\u6b21\u518d\u91cd\u65b0\u8ba1\u7b97\u3002 \u4e8e\u662f\u53ef\u4ee5\u4f18\u5316\u5f97\u5230 1 2 3 4 5 6 7 int aa [ MAXN ], n , ss [ MAXN ]; // init... int ans = 0x3f3f3f3f ; for ( int i = 0 ; i < n - 1 ; i ++ ) { int sum = ss [ i - 1 ] + s [ n - 2 ] - s [ i + k -1 ]; ans = min ( ans , sum ); } \u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\u6570\u7ec4 \\(a\\) \u5e76\u6ca1\u6709\u4ec0\u4e48\u4fdd\u5b58\u7684\u4ef7\u503c\uff0c\u53ef\u4ee5\u5220\u53bb\uff0c\u4f18\u5316\u5185\u5b58\u3002","title":"\u4f18\u5316 1"},{"location":"basic/prefix-sum/#\u4f18\u5316-2","text":"\u53ef\u80fd\u6709\u540c\u5b66\u60f3\u5230\u4e86\u53e6\u4e00\u79cd\u89e3\u6cd5\uff0c\u8fd9\u91cc\u4e5f\u8bb2\u4e00\u4e0b\u3002 \u6ce8\u610f\u5230\uff0c\u7b54\u6848\u53ef\u4ee5\u770b\u6210\u4e24\u6bb5\u548c\u76f8\u52a0\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f5c\u5168\u90e8\u7684\u548c\u51cf\u53bb \\(k\\) \u4e2a\uff0c\u800c\u5168\u90e8\u7684\u548c\u662f\u56fa\u5b9a\u7684\u3002 \u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4e00\u79cd\u961f\u5217\u7684\u65b9\u5f0f\uff0c\u7ef4\u62a4\u4ece \\(l\\) \u5f00\u59cb\u5230 \\(r\\) \u7ed3\u675f\u7684\u8fde\u7eed\u4e00\u6bb5\u6570\u5b57\u7684\u548c \\(s\\) \u3002\u5f53\u6c42\u548c\u6bb5\u5411\u53f3\u79fb\u52a8\u65f6\uff0c\u53ea\u9700 \\(s' = s - a_l + a_{r+1}\\) \u3002 1 2 3 4 5 6 7 8 9 10 // init... int tsum = 0 ; for ( int i = 0 ; i < k ; i ++ ) tsum += aa [ i ]; int ans = tsum ; for ( int i = k ; i < n - 1 ; i ++ ) { tsum = tsum + aa [ i ] - aa [ i - k ]; ans = max ( ans , t ); } return sum - ans ;","title":"\u4f18\u5316 2"},{"location":"basic/prefix-sum/#\u5dee\u5206","text":"\u7c7b\u4f3c\u7684\uff0c\u6709\u524d\u7f00\u548c\uff0c\u5c31\u6709\u5dee\u5206\u3002\u5dee\u5206\u6570\u7ec4\u7684\u524d\u7f00\u548c\u662f\u539f\u6570\u7ec4\u3002 \u5dee\u5206\u6709\u4ec0\u4e48\u7528\u5462\uff1f \u5dee\u5206\u53ef\u4ee5\u628a\u201c\u533a\u95f4\u589e\u52a0\u201d\u53d8\u6210\u201c\u5355\u70b9\u589e\u52a0\u201d\u3002\u8be6\u7ec6\u89c1 P2367 \u8bed\u6587\u6210\u7ee9 \u3002","title":"\u5dee\u5206"},{"location":"basic/prefix-sum/#\u4f8b\u9898","text":"P5638 \u5149\u9a93\u8005\u7684\u8363\u8000 P2367 \u8bed\u6587\u6210\u7ee9","title":"\u4f8b\u9898"},{"location":"basic/prefix-sum/#\u6269\u5c55--\u4e8c\u7ef4\u524d\u7f00\u548c","text":"","title":"\u6269\u5c55 \u00b7 \u4e8c\u7ef4\u524d\u7f00\u548c"},{"location":"basic/prefix-sum/#\u6269\u5c55--\u9ad8\u7ef4\u524d\u7f00\u548c","text":"","title":"\u6269\u5c55 \u00b7 \u9ad8\u7ef4\u524d\u7f00\u548c"},{"location":"basic/quick-pow/","text":"\u5feb\u901f\u5e42 \u2693\ufe0e \u5047\u5982\u6211\u4eec\u60f3\u8981\u5f97\u5230 \\(3^{100} \\bmod 10007\\) \uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f \u4f60\u53ef\u80fd\u4f1a\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801 1 2 3 4 5 const int mod = 10007 ; int ans = 1 ; for ( int i = 0 ; i < 100 ; i ++ ) ans = ans * 3 % mod ; return ans ; \u5047\u5982\u8981\u8ba1\u7b97\u7684\u662f \\(a^n \\bmod p\\) \uff0c\u90a3\u4e48\u8fd9\u79cd\u5199\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u3002\u5c3d\u7ba1 \\(O(n)\\) \u542c\u8d77\u6765\u5df2\u7ecf\u5f88\u4e0d\u9519\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u66f4\u5feb\u3002 \u5e73\u65b9\u6cd5 \u2693\ufe0e \u5047\u8bbe\u521d\u59cb\u4e3a \\(a\\) \uff0c\u81ea\u4e58\u540e\u5f97\u5230 \\(a^2\\) \uff0c\u518d\u5bf9\u7ed3\u679c\u81ea\u4e58\u5f97\u5230 \\(a^4\\) \uff0c\u53cd\u590d\u4e0b\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u5217\u6570 \\[a \\to a^2 \\to a^{4} \\to a^{8} \\to a^{16} \\to a^{32} \\to a^{64} \\to \\cdots\\] \u5bb9\u6613\u53d1\u73b0\uff0c\u5b83\u7684\u6307\u6570\u7684\u589e\u957f\u901f\u5ea6\u662f \\(2^k\\) \uff0c\u6bd4\u7ebf\u6027\u589e\u957f\u7684\u901f\u5ea6\u5feb\u7684\u591a\u3002 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5229\u7528\u201c\u5e73\u65b9\u6cd5\u201d\u52a0\u901f\u5e42\u7684\u8fd0\u7b97\u3002 \u9012\u5f52\u65b9\u6cd5 \u2693\ufe0e \u5f88\u81ea\u7136\u7684\u60f3\u5230 \\[a^n = \\begin{cases} a^{n-1} \\times a, &n \\bmod 2 = 1\\\\ a^{\\frac{n}{2}} \\times a^{\\frac{n}{2}}, &n \\bmod 2 = 0 \\end{cases}\\] \u53ef\u4ee5\u636e\u6b64\u5b9e\u73b0\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 const int mod = 10007 ; int qpow ( int a , int n ) { if ( n == 0 ) { return 1 ; } else if ( n % 2 == 1 ) { return qpow ( a , n - 1 ) * a % mod ; } else { int t = qpow ( a , n / 2 ); return t * t % mod ; } } \u601d\u8003 \u4e3a\u4ec0\u4e48\u4e0d\u5199 qpow(a, n / 2) * qpow(a, n / 2) \uff0c\u800c\u7528 t \u8fdb\u884c\u5b58\u50a8\uff1f \u9012\u5f52\u672c\u8eab\u4e5f\u5177\u6709\u4e00\u5b9a\u7684\u5f00\u9500\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u52a0\u601d\u8003\uff0c\u6539\u8fdb\u5f97\u5230\u975e\u9012\u5f52\u6cd5\u3002 \u975e\u9012\u5f52\u6cd5 \u2693\ufe0e \u8fd8\u662f\u8ba8\u8bba \\(a^{100}\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u62c6\u5206\u6210\u201c\u5e73\u65b9\u6cd5\u201d\u6570\u5217\u4e2d\u7684\u9879\u7684\u4e58\u79ef \\[a^{100} = a^{64} \\times a^{32} \\times a^4\\] \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684 \\(n\\) \uff0c\u5982\u4f55\u62c6\u5206 \\(a^n\\) \u624d\u53ef\u4ee5\u5229\u7528\u5e73\u65b9\u6cd5\u52a0\u901f\u5462\uff1f \u6ce8\u610f\u5230\u5e73\u65b9\u6cd5\u6570\u5217\u4e2d\u7684\u6307\u6570\u90fd\u662f \\(2\\) \u7684\u5e42\uff0c\u5373\u628a \\(n\\) \u5206\u89e3\u4e3a \\(2\\) \u7684\u5e42\u7684\u548c\uff0c\u4e8e\u662f\u5f88\u81ea\u7136\u7684\u60f3\u5230 \\(n\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002 \u56e0\u4e3a \\(100_{10} = 1100100_2\\) \uff0c\u4e8e\u662f\u6709 \\[\\begin{matrix} & a^1 & a^2 & a^4 & a^8 & a^{16} & a^{32} & a^{64} \\\\100 & & & 4 & & & 32 & 64\\\\100 & 0 & 0 & 1 & 0 & 0 & 1 & 1 \\\\\\end{matrix}\\] \u5373\u4e8c\u8fdb\u5236\u4e0b\u8be5\u4f4d\u4e3a \\(1\\) \uff0c\u5219\u8ba1\u7b97\u8be5\u4f4d\u7684\u8d21\u732e\uff1b\u82e5\u8be5\u4f4d\u4e3a \\(0\\) \uff0c\u5219\u4e0d\u8ba1\u7b97\u8be5\u4f4d\u7684\u8d21\u732e\u3002 \u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 const int mod = 10007 ; int qpow ( int a , int n ) { int ans = 1 ; while ( n > 0 ) { if ( n % 2 == 1 ) ans = ans * a % mod ; a = a * a % mod ; n = n / 2 ; } return ans ; } \u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u5f80\u5f80\u5199\u6210\u8fd9\u6837 1 2 3 4 5 6 7 8 9 ll qpow ( ll a , ll b , ll p ) { ll rst = p != 1 ; for (; b ; b >>= 1 ) { if ( b & 1 ) rst = a * rst % p ; a = a * a % p ; } return rst ; } \u5e94\u7528 \u2693\ufe0e \u5feb\u901f\u5e42\u53ea\u662f\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f46\u662f\u5e94\u7528\u7684\u8303\u56f4\u5f88\u5e7f\u6cdb\u3002 \u6570\u5217\u9012\u63a8 \u2693\ufe0e \u62ff\u6211\u4eec\u719f\u6089\u7684 Fibonacci \u6570\u5217\u4e3e\u4f8b \\[F_{n+2} = F_{n+1} + F_{n}\\] \u53ef\u4ee5\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u5f62\u5f0f \\[\\left(\\begin{matrix}F_{n+1}\\\\F_{n+2}\\end{matrix}\\right) = \\left(\\begin{matrix}0 & 1\\\\1 & 1\\end{matrix}\\right)\\left(\\begin{matrix}F_{n}\\\\F_{n+1}\\end{matrix}\\right)\\] \u8bbe \\(P = \\left(\\begin{matrix}0 & 1\\\\1 & 1\\end{matrix}\\right)\\) \uff0c\u4e8e\u662f\u6709 \\[\\left(\\begin{matrix}F_{n+1}\\\\F_{n+2}\\end{matrix}\\right) = P^n\\left(\\begin{matrix}F_{1}\\\\F_{2}\\end{matrix}\\right)\\] \u53ef\u4ee5\u5bf9\u77e9\u9635\u4f7f\u7528\u5feb\u901f\u5e42\uff0c\u90a3\u4e48\u8ba1\u7b97\u7b2c \\(n\\) \u9879\u53ea\u9700 \\(O(\\log n)\\) \u3002 \u4f8b\u9898 \u2693\ufe0e P1226 \u3010\u6a21\u677f\u3011\u5feb\u901f\u5e42 P1962 \u6590\u6ce2\u90a3\u5951\u6570\u5217","title":"\u5feb\u901f\u5e42"},{"location":"basic/quick-pow/#\u5feb\u901f\u5e42","text":"\u5047\u5982\u6211\u4eec\u60f3\u8981\u5f97\u5230 \\(3^{100} \\bmod 10007\\) \uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f \u4f60\u53ef\u80fd\u4f1a\u5199\u51fa\u8fd9\u6837\u7684\u4ee3\u7801 1 2 3 4 5 const int mod = 10007 ; int ans = 1 ; for ( int i = 0 ; i < 100 ; i ++ ) ans = ans * 3 % mod ; return ans ; \u5047\u5982\u8981\u8ba1\u7b97\u7684\u662f \\(a^n \\bmod p\\) \uff0c\u90a3\u4e48\u8fd9\u79cd\u5199\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(n)\\) \u3002\u5c3d\u7ba1 \\(O(n)\\) \u542c\u8d77\u6765\u5df2\u7ecf\u5f88\u4e0d\u9519\uff0c\u4f46\u662f\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u5230\u66f4\u5feb\u3002","title":"\u5feb\u901f\u5e42"},{"location":"basic/quick-pow/#\u5e73\u65b9\u6cd5","text":"\u5047\u8bbe\u521d\u59cb\u4e3a \\(a\\) \uff0c\u81ea\u4e58\u540e\u5f97\u5230 \\(a^2\\) \uff0c\u518d\u5bf9\u7ed3\u679c\u81ea\u4e58\u5f97\u5230 \\(a^4\\) \uff0c\u53cd\u590d\u4e0b\u53bb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u5217\u6570 \\[a \\to a^2 \\to a^{4} \\to a^{8} \\to a^{16} \\to a^{32} \\to a^{64} \\to \\cdots\\] \u5bb9\u6613\u53d1\u73b0\uff0c\u5b83\u7684\u6307\u6570\u7684\u589e\u957f\u901f\u5ea6\u662f \\(2^k\\) \uff0c\u6bd4\u7ebf\u6027\u589e\u957f\u7684\u901f\u5ea6\u5feb\u7684\u591a\u3002 \u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5229\u7528\u201c\u5e73\u65b9\u6cd5\u201d\u52a0\u901f\u5e42\u7684\u8fd0\u7b97\u3002","title":"\u5e73\u65b9\u6cd5"},{"location":"basic/quick-pow/#\u9012\u5f52\u65b9\u6cd5","text":"\u5f88\u81ea\u7136\u7684\u60f3\u5230 \\[a^n = \\begin{cases} a^{n-1} \\times a, &n \\bmod 2 = 1\\\\ a^{\\frac{n}{2}} \\times a^{\\frac{n}{2}}, &n \\bmod 2 = 0 \\end{cases}\\] \u53ef\u4ee5\u636e\u6b64\u5b9e\u73b0\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 const int mod = 10007 ; int qpow ( int a , int n ) { if ( n == 0 ) { return 1 ; } else if ( n % 2 == 1 ) { return qpow ( a , n - 1 ) * a % mod ; } else { int t = qpow ( a , n / 2 ); return t * t % mod ; } } \u601d\u8003 \u4e3a\u4ec0\u4e48\u4e0d\u5199 qpow(a, n / 2) * qpow(a, n / 2) \uff0c\u800c\u7528 t \u8fdb\u884c\u5b58\u50a8\uff1f \u9012\u5f52\u672c\u8eab\u4e5f\u5177\u6709\u4e00\u5b9a\u7684\u5f00\u9500\uff0c\u6211\u4eec\u53ef\u4ee5\u7a0d\u52a0\u601d\u8003\uff0c\u6539\u8fdb\u5f97\u5230\u975e\u9012\u5f52\u6cd5\u3002","title":"\u9012\u5f52\u65b9\u6cd5"},{"location":"basic/quick-pow/#\u975e\u9012\u5f52\u6cd5","text":"\u8fd8\u662f\u8ba8\u8bba \\(a^{100}\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5b83\u62c6\u5206\u6210\u201c\u5e73\u65b9\u6cd5\u201d\u6570\u5217\u4e2d\u7684\u9879\u7684\u4e58\u79ef \\[a^{100} = a^{64} \\times a^{32} \\times a^4\\] \u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u7684 \\(n\\) \uff0c\u5982\u4f55\u62c6\u5206 \\(a^n\\) \u624d\u53ef\u4ee5\u5229\u7528\u5e73\u65b9\u6cd5\u52a0\u901f\u5462\uff1f \u6ce8\u610f\u5230\u5e73\u65b9\u6cd5\u6570\u5217\u4e2d\u7684\u6307\u6570\u90fd\u662f \\(2\\) \u7684\u5e42\uff0c\u5373\u628a \\(n\\) \u5206\u89e3\u4e3a \\(2\\) \u7684\u5e42\u7684\u548c\uff0c\u4e8e\u662f\u5f88\u81ea\u7136\u7684\u60f3\u5230 \\(n\\) \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002 \u56e0\u4e3a \\(100_{10} = 1100100_2\\) \uff0c\u4e8e\u662f\u6709 \\[\\begin{matrix} & a^1 & a^2 & a^4 & a^8 & a^{16} & a^{32} & a^{64} \\\\100 & & & 4 & & & 32 & 64\\\\100 & 0 & 0 & 1 & 0 & 0 & 1 & 1 \\\\\\end{matrix}\\] \u5373\u4e8c\u8fdb\u5236\u4e0b\u8be5\u4f4d\u4e3a \\(1\\) \uff0c\u5219\u8ba1\u7b97\u8be5\u4f4d\u7684\u8d21\u732e\uff1b\u82e5\u8be5\u4f4d\u4e3a \\(0\\) \uff0c\u5219\u4e0d\u8ba1\u7b97\u8be5\u4f4d\u7684\u8d21\u732e\u3002 \u4e8e\u662f\u53ef\u4ee5\u5199\u51fa\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 const int mod = 10007 ; int qpow ( int a , int n ) { int ans = 1 ; while ( n > 0 ) { if ( n % 2 == 1 ) ans = ans * a % mod ; a = a * a % mod ; n = n / 2 ; } return ans ; } \u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u5f80\u5f80\u5199\u6210\u8fd9\u6837 1 2 3 4 5 6 7 8 9 ll qpow ( ll a , ll b , ll p ) { ll rst = p != 1 ; for (; b ; b >>= 1 ) { if ( b & 1 ) rst = a * rst % p ; a = a * a % p ; } return rst ; }","title":"\u975e\u9012\u5f52\u6cd5"},{"location":"basic/quick-pow/#\u5e94\u7528","text":"\u5feb\u901f\u5e42\u53ea\u662f\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u4f46\u662f\u5e94\u7528\u7684\u8303\u56f4\u5f88\u5e7f\u6cdb\u3002","title":"\u5e94\u7528"},{"location":"basic/quick-pow/#\u6570\u5217\u9012\u63a8","text":"\u62ff\u6211\u4eec\u719f\u6089\u7684 Fibonacci \u6570\u5217\u4e3e\u4f8b \\[F_{n+2} = F_{n+1} + F_{n}\\] \u53ef\u4ee5\u5199\u6210\u77e9\u9635\u4e58\u6cd5\u5f62\u5f0f \\[\\left(\\begin{matrix}F_{n+1}\\\\F_{n+2}\\end{matrix}\\right) = \\left(\\begin{matrix}0 & 1\\\\1 & 1\\end{matrix}\\right)\\left(\\begin{matrix}F_{n}\\\\F_{n+1}\\end{matrix}\\right)\\] \u8bbe \\(P = \\left(\\begin{matrix}0 & 1\\\\1 & 1\\end{matrix}\\right)\\) \uff0c\u4e8e\u662f\u6709 \\[\\left(\\begin{matrix}F_{n+1}\\\\F_{n+2}\\end{matrix}\\right) = P^n\\left(\\begin{matrix}F_{1}\\\\F_{2}\\end{matrix}\\right)\\] \u53ef\u4ee5\u5bf9\u77e9\u9635\u4f7f\u7528\u5feb\u901f\u5e42\uff0c\u90a3\u4e48\u8ba1\u7b97\u7b2c \\(n\\) \u9879\u53ea\u9700 \\(O(\\log n)\\) \u3002","title":"\u6570\u5217\u9012\u63a8"},{"location":"basic/quick-pow/#\u4f8b\u9898","text":"P1226 \u3010\u6a21\u677f\u3011\u5feb\u901f\u5e42 P1962 \u6590\u6ce2\u90a3\u5951\u6570\u5217","title":"\u4f8b\u9898"},{"location":"basic/recursion/","text":"\u9012\u63a8\u521d\u6b65 \u2693\ufe0e \u9012\u63a8\u6c42\u6570\u5217\u5e94\u8be5\u90fd\u5f88\u719f\u6089\uff0c\u8fd9\u91cc\u8bb2\u7684\u7b80\u7565\u4e00\u70b9\u3002 \u539f\u7406 \u2693\ufe0e \u8fd8\u662f\u62ff Fibonacci \u6570\u5217\u4e3e\u4f8b\uff0c\u9012\u63a8\u516c\u5f0f\u4e3a \\[F_{n+2} = F_{n+1} + F_{n}\\] \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u7b2c \\(1\\) \u9879\u5f00\u59cb\u63a8\u5230\u7b2c \\(n\\) \u9879 1 2 3 4 5 int f [ MAXN ]; f [ 1 ] = f [ 2 ] = 1 ; for ( int i = 3 ; i < n ; i ++ ) { f [ i ] = f [ i - 1 ] + f [ i - 2 ]; } \u7c7b\u4f3c\u7684\uff0c\u53ea\u8981\u6211\u4eec\u80fd\u6c42\u51fa\u9012\u63a8\u516c\u5f0f\uff0c\u90a3\u4e48\u7528\u5faa\u73af\u904d\u5386\u6c42\u503c\u5373\u53ef\u3002 \u5feb\u901f\u500d\u589e\u6cd5 \u2693\ufe0e \u5728\u5feb\u901f\u5e42\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u8bb2\u4e86\u5982\u4f55\u5229\u7528\u77e9\u9635\u52a0\u901f\u505a\u5230 \\(O(\\log n)\\) \u6c42\u7b2c \\(n\\) \u9879\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u6709\u4e00\u79cd\u5feb\u901f\u500d\u589e\u6cd5\u3002 \\[\\begin{aligned}F_{2k} &= F_k (2F_{k+1} - F_k)\\\\ F_{2k+1} &= F_{k+1}^2+F_k^2\\end{aligned}\\] \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u5feb\u901f\u8ba1\u7b97\u76f8\u90bb\u4e24\u4e2a\u76f8\u90bb\u7684 Fibonacci \u6570\uff0c\u590d\u6742\u5ea6\u4e0e\u77e9\u9635\u5feb\u901f\u5e42\u4e00\u6837\uff0c\u4f46\u662f\u8fd0\u7b97\u91cf\u7a0d\u5c0f\u4e00\u70b9\u3002 \u4f8b\u9898 \u2693\ufe0e P1028 \u6570\u7684\u8ba1\u7b97 P1192 \u53f0\u9636\u95ee\u9898 P1595 \u4fe1\u5c01\u95ee\u9898 P1115 \u6700\u5927\u5b50\u6bb5\u548c P1962 \u6590\u6ce2\u90a3\u5951\u6570\u5217","title":"\u9012\u63a8\u521d\u6b65"},{"location":"basic/recursion/#\u9012\u63a8\u521d\u6b65","text":"\u9012\u63a8\u6c42\u6570\u5217\u5e94\u8be5\u90fd\u5f88\u719f\u6089\uff0c\u8fd9\u91cc\u8bb2\u7684\u7b80\u7565\u4e00\u70b9\u3002","title":"\u9012\u63a8\u521d\u6b65"},{"location":"basic/recursion/#\u539f\u7406","text":"\u8fd8\u662f\u62ff Fibonacci \u6570\u5217\u4e3e\u4f8b\uff0c\u9012\u63a8\u516c\u5f0f\u4e3a \\[F_{n+2} = F_{n+1} + F_{n}\\] \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4ece\u7b2c \\(1\\) \u9879\u5f00\u59cb\u63a8\u5230\u7b2c \\(n\\) \u9879 1 2 3 4 5 int f [ MAXN ]; f [ 1 ] = f [ 2 ] = 1 ; for ( int i = 3 ; i < n ; i ++ ) { f [ i ] = f [ i - 1 ] + f [ i - 2 ]; } \u7c7b\u4f3c\u7684\uff0c\u53ea\u8981\u6211\u4eec\u80fd\u6c42\u51fa\u9012\u63a8\u516c\u5f0f\uff0c\u90a3\u4e48\u7528\u5faa\u73af\u904d\u5386\u6c42\u503c\u5373\u53ef\u3002","title":"\u539f\u7406"},{"location":"basic/recursion/#\u5feb\u901f\u500d\u589e\u6cd5","text":"\u5728\u5feb\u901f\u5e42\u4e00\u8282\u4e2d\uff0c\u6211\u4eec\u8bb2\u4e86\u5982\u4f55\u5229\u7528\u77e9\u9635\u52a0\u901f\u505a\u5230 \\(O(\\log n)\\) \u6c42\u7b2c \\(n\\) \u9879\u3002\u5b9e\u9645\u4e0a\u6211\u4eec\u8fd8\u6709\u4e00\u79cd\u5feb\u901f\u500d\u589e\u6cd5\u3002 \\[\\begin{aligned}F_{2k} &= F_k (2F_{k+1} - F_k)\\\\ F_{2k+1} &= F_{k+1}^2+F_k^2\\end{aligned}\\] \u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\u5feb\u901f\u8ba1\u7b97\u76f8\u90bb\u4e24\u4e2a\u76f8\u90bb\u7684 Fibonacci \u6570\uff0c\u590d\u6742\u5ea6\u4e0e\u77e9\u9635\u5feb\u901f\u5e42\u4e00\u6837\uff0c\u4f46\u662f\u8fd0\u7b97\u91cf\u7a0d\u5c0f\u4e00\u70b9\u3002","title":"\u5feb\u901f\u500d\u589e\u6cd5"},{"location":"basic/recursion/#\u4f8b\u9898","text":"P1028 \u6570\u7684\u8ba1\u7b97 P1192 \u53f0\u9636\u95ee\u9898 P1595 \u4fe1\u5c01\u95ee\u9898 P1115 \u6700\u5927\u5b50\u6bb5\u548c P1962 \u6590\u6ce2\u90a3\u5951\u6570\u5217","title":"\u4f8b\u9898"},{"location":"basic/sort/","text":"\u6392\u5e8f \u2693\ufe0e \u5047\u5b9a\u5192\u6ce1\u6392\u5e8f\u662f\u719f\u77e5\u3002 \u5feb\u901f\u6392\u5e8f \u2693\ufe0e \u5feb\u901f\u6392\u5e8f\u7684\u5747\u644a\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\) \uff0c\u6700\u574f\u590d\u6742\u5ea6\u662f \\(O(n^2)\\) \uff0c\u901a\u5e38\u5feb\u4e00\u70b9\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5206\u6cbb\u3002 \u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u91cc\u6211\u9009\u7684\u662f\u4e2d\u95f4\u7684\uff0c\u4e5f\u53ef\u4ee5\u9009\u5f00\u5934\uff0c\u65e0\u6240\u8c13\u7684\u3002 \u628a\u6bd4\u8fd9\u4e2a\u5143\u7d20\u5c0f\u7684\u6362\u5230\u5de6\u8fb9\uff0c\u6bd4\u8fd9\u4e2a\u5143\u7d20\u5927\u7684\u6362\u5230\u53f3\u8fb9\uff0c\u6700\u540e\u628a\u521a\u624d\u9009\u4e2d\u7684\u5143\u7d20\u653e\u56de\u53bb\u3002 \u518d\u5bf9\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u540c\u6837\u8fdb\u884c\u64cd\u4f5c\u3002 \u6b63\u786e\u6027\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u663e\u7136\u3002 \u6ce8\u610f\u5230\u7b2c 2 \u6b65\u7ed3\u675f\u65f6\uff0c\u5bf9\u4e8e\u9009\u4e2d\u7684\u5143\u7d20\u6765\u8bf4\uff0c\u5de6\u8fb9\u4e00\u5b9a\u662f\u6bd4\u5b83\u5c0f\u7684\uff0c\u53f3\u8fb9\u4e00\u5b9a\u662f\u6bd4\u5b83\u5927\u7684\u3002\u6392\u5e8f\u540e\u5de6\u8fb9\u7684\u5143\u7d20\u4e00\u5b9a\u4e0d\u4f1a\u6e9c\u5230\u53f3\u8fb9\u53bb\uff0c\u53f3\u8fb9\u4e5f\u4e0d\u4f1a\u6765\u5de6\u8fb9\u3002\u8fd9\u79cd\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u7528\u7684\u6709\u5e8f\u6027\uff0c\u8db3\u4ee5\u5b8c\u6210\u5168\u90e8\u7684\u6392\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 int nn [ MAXN ]; void quick_sort ( int l , int r ) { if ( l >= r ) return ; int i = l , j = r ; int x = nn [( l + r ) / 2 ]; while ( i <= j ) { while ( nn [ j ] > x ) j -- ; while ( nn [ i ] < x ) i ++ ; if ( i <= j ) { swap ( nn [ i ], nn [ j ]); i ++ ; j -- ; } } quick_sort ( l , j ); quick_sort ( i , r ); } \u66f4\u591a\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4f8b\u5982\u5e0c\u5c14\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u6876\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u7b49\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff0c\u4e00\u822c\u5feb\u6392\u591f\u7528\u4e86\u3002\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u53bb \u6392\u5e8f - OI Wiki \u770b\u770b\u3002 \u5e94\u7528 \u2693\ufe0e \u68c0\u67e5\u6570\u5217\u76f8\u7b49\u5143\u7d20\uff1a\u6392\u5e8f\u540e\uff0c\u5224\u65ad\u76f8\u90bb\u5143\u7d20\u662f\u5426\u76f8\u7b49\u3002 \u4e8c\u5206\u67e5\u627e\uff1a\u9884\u5904\u7406\u540e\u6709\u5e8f\u7684\uff0c\u67e5\u627e\u4f1a\u5feb\u5f88\u591a\uff0c \u5feb\u6392\u53ef\u4ee5\u505a\u5230 \\(O(n)\\) \u6c42\u7b2c \\(k\\) \u5c0f\u6570\u3002 \u4f8b\u9898 \u2693\ufe0e P5143 \u6500\u722c\u8005 P1223 \u6392\u961f\u63a5\u6c34 P1177 \u5feb\u901f\u6392\u5e8f P1923 \u6c42\u7b2c k \u5c0f\u7684\u6570 P1908 \u9006\u5e8f\u5bf9 \uff08\u63d0\u793a\uff1a\u4e24\u91cd\u5faa\u73af\u4f1a\u8d85\u65f6\u54e6\uff09","title":"\u6392\u5e8f"},{"location":"basic/sort/#\u6392\u5e8f","text":"\u5047\u5b9a\u5192\u6ce1\u6392\u5e8f\u662f\u719f\u77e5\u3002","title":"\u6392\u5e8f"},{"location":"basic/sort/#\u5feb\u901f\u6392\u5e8f","text":"\u5feb\u901f\u6392\u5e8f\u7684\u5747\u644a\u590d\u6742\u5ea6\u662f \\(O(n\\log n)\\) \uff0c\u6700\u574f\u590d\u6742\u5ea6\u662f \\(O(n^2)\\) \uff0c\u901a\u5e38\u5feb\u4e00\u70b9\u3002 \u5b83\u7684\u6838\u5fc3\u601d\u60f3\u662f\u5206\u6cbb\u3002 \u53d6\u51fa\u4e00\u4e2a\u5143\u7d20\uff0c\u8fd9\u91cc\u6211\u9009\u7684\u662f\u4e2d\u95f4\u7684\uff0c\u4e5f\u53ef\u4ee5\u9009\u5f00\u5934\uff0c\u65e0\u6240\u8c13\u7684\u3002 \u628a\u6bd4\u8fd9\u4e2a\u5143\u7d20\u5c0f\u7684\u6362\u5230\u5de6\u8fb9\uff0c\u6bd4\u8fd9\u4e2a\u5143\u7d20\u5927\u7684\u6362\u5230\u53f3\u8fb9\uff0c\u6700\u540e\u628a\u521a\u624d\u9009\u4e2d\u7684\u5143\u7d20\u653e\u56de\u53bb\u3002 \u518d\u5bf9\u5de6\u53f3\u4e24\u4e2a\u533a\u95f4\u540c\u6837\u8fdb\u884c\u64cd\u4f5c\u3002 \u6b63\u786e\u6027\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u663e\u7136\u3002 \u6ce8\u610f\u5230\u7b2c 2 \u6b65\u7ed3\u675f\u65f6\uff0c\u5bf9\u4e8e\u9009\u4e2d\u7684\u5143\u7d20\u6765\u8bf4\uff0c\u5de6\u8fb9\u4e00\u5b9a\u662f\u6bd4\u5b83\u5c0f\u7684\uff0c\u53f3\u8fb9\u4e00\u5b9a\u662f\u6bd4\u5b83\u5927\u7684\u3002\u6392\u5e8f\u540e\u5de6\u8fb9\u7684\u5143\u7d20\u4e00\u5b9a\u4e0d\u4f1a\u6e9c\u5230\u53f3\u8fb9\u53bb\uff0c\u53f3\u8fb9\u4e5f\u4e0d\u4f1a\u6765\u5de6\u8fb9\u3002\u8fd9\u79cd\u770b\u8d77\u6765\u6ca1\u4ec0\u4e48\u7528\u7684\u6709\u5e8f\u6027\uff0c\u8db3\u4ee5\u5b8c\u6210\u5168\u90e8\u7684\u6392\u5e8f\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 int nn [ MAXN ]; void quick_sort ( int l , int r ) { if ( l >= r ) return ; int i = l , j = r ; int x = nn [( l + r ) / 2 ]; while ( i <= j ) { while ( nn [ j ] > x ) j -- ; while ( nn [ i ] < x ) i ++ ; if ( i <= j ) { swap ( nn [ i ], nn [ j ]); i ++ ; j -- ; } } quick_sort ( l , j ); quick_sort ( i , r ); } \u66f4\u591a\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4f8b\u5982\u5e0c\u5c14\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u3001\u6876\u6392\u5e8f\u3001\u5806\u6392\u5e8f\u7b49\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff0c\u4e00\u822c\u5feb\u6392\u591f\u7528\u4e86\u3002\u60f3\u4e86\u89e3\u7684\u53ef\u4ee5\u53bb \u6392\u5e8f - OI Wiki \u770b\u770b\u3002","title":"\u5feb\u901f\u6392\u5e8f"},{"location":"basic/sort/#\u5e94\u7528","text":"\u68c0\u67e5\u6570\u5217\u76f8\u7b49\u5143\u7d20\uff1a\u6392\u5e8f\u540e\uff0c\u5224\u65ad\u76f8\u90bb\u5143\u7d20\u662f\u5426\u76f8\u7b49\u3002 \u4e8c\u5206\u67e5\u627e\uff1a\u9884\u5904\u7406\u540e\u6709\u5e8f\u7684\uff0c\u67e5\u627e\u4f1a\u5feb\u5f88\u591a\uff0c \u5feb\u6392\u53ef\u4ee5\u505a\u5230 \\(O(n)\\) \u6c42\u7b2c \\(k\\) \u5c0f\u6570\u3002","title":"\u5e94\u7528"},{"location":"basic/sort/#\u4f8b\u9898","text":"P5143 \u6500\u722c\u8005 P1223 \u6392\u961f\u63a5\u6c34 P1177 \u5feb\u901f\u6392\u5e8f P1923 \u6c42\u7b2c k \u5c0f\u7684\u6570 P1908 \u9006\u5e8f\u5bf9 \uff08\u63d0\u793a\uff1a\u4e24\u91cd\u5faa\u73af\u4f1a\u8d85\u65f6\u54e6\uff09","title":"\u4f8b\u9898"},{"location":"other/english/","text":"","title":"English"},{"location":"other/markdown/","text":"Markdown \u4ecb\u7ecd \u2693\ufe0e \u6211\u63a8\u8350 Markdown\uff0c\u56e0\u4e3a\u5b83\u8db3\u591f\u6d41\u884c\uff0c\u8db3\u591f\u7b80\u5355\u3002 \u672c\u6587\u8bb2\u4ecb\u7ecd\u4e00\u4e9b Markdown \u7684\u57fa\u7840\u6587\u6cd5\uff0cMkDocs \u72ec\u6709\u7684\u7279\u6027\u8bf7\u9605\u8bfb MkDocs \u3002 \u66f4\u8be6\u7ec6\u7684\u8bf7\u9605\u8bfb Cyent \u3002 Markdown \u9002\u5408 \u2693\ufe0e Markdown \u662f HTML \u7684\u7b80\u5355\u66ff\u4ee3\uff0c\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002\u5b83\u9002\u5408\u4e8e\u64b0\u5199\u7f51\u7edc\u6587\u7ae0\uff0c\u901a\u5e38\u8fd9\u4e9b\u6587\u7ae0\u53ea\u9700\u8981\u5f88\u5c11\u7684\u683c\u5f0f\u3002 Markdown \u4e0d\u9002\u5408\u505a\u590d\u6742\u7684\u6392\u7248\u5de5\u4f5c\uff0c\u5b83\u4e0d\u80fd\u7cbe\u786e\u7684\u63a7\u5236\u6587\u672c\u7684\u6837\u5f0f\u3002 \u7f16\u8f91\u5668 \u2693\ufe0e \u652f\u6301 Markdown \u7684\u7f16\u8f91\u5668\u5f88\u591a\u3002\u6211\u63a8\u8350 VSCode \uff0c\u5b83\u662f\u4e00\u4e2a\u901a\u7528\u800c\u5f3a\u5927\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u5c1d\u8bd5 Typora \uff0c\u5b83\u4e00\u4e2a\u6240\u89c1\u5373\u6240\u5f97\u7684 Markdown \u7f16\u8f91\u5668\u3002 \u6216\u8005\u4f60\u4e0d\u613f\u610f\u4e0b\u8f7d\uff0c\u4f60\u53ef\u4ee5\u5728\u7ebf\u5c1d\u8bd5 CMD \u4f5c\u4e1a\u90e8\u843d \u3002 \u6807\u9898\u4e0e\u6bb5\u843d \u2693\ufe0e \u6807\u9898\u4f7f\u7528 # \u7b26\u53f7\uff0c\u7a7a\u683c\u540e\u63a5\u6587\u672c\u3002 1 2 3 4 5 6 7 8 # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u666e\u901a\u6bb5\u843d\u3002 \u666e\u901a\u6bb5\u843d\uff0c\u6bcf\u4e24\u6bb5\u4e4b\u95f4\u7a7a\u4e00\u884c\u3002 1 2 3 4 \u5176\u5b83\u683c\u5f0f\u6709 **\u7c97\u4f53** \u548c *\u659c\u4f53* \uff0c \u6bb5\u95f4\u8bb0\u5f97\u7a7a\u884c\uff0c\u5426\u5219\u4e0d\u4f1a\u6362\u884c\u7684\u3002 \u8fd8\u6709 <u>\u4e0b\u5212\u7ebf</u> \u548c <del>\u5220\u9664\u7ebf</del>\uff0c\u548c ==\u9ad8\u4eae== \u3002 \u5176\u5b83\u683c\u5f0f\u6709 \u7c97\u4f53 \u548c \u659c\u4f53 \uff0c \u6bb5\u95f4\u8bb0\u5f97\u7a7a\u884c\uff0c\u5426\u5219\u4e0d\u4f1a\u6362\u884c\u7684\u3002 \u8fd8\u6709 \u4e0b\u5212\u7ebf \u548c \u5220\u9664\u7ebf \uff0c\u548c \u9ad8\u4eae \u3002 \u5f15\u7528 \u2693\ufe0e 1 2 3 > \u8fd9\u91cc\u662f\u5f15\u7528 > > > \u4e8c\u7ea7\u5f15\u7528\u3002 \u4ee3\u7801 \u2693\ufe0e 1 \u5185\u8054\u4ee3\u7801 `var example = true` \uff0c\u6309\u952e <kbd>Ctrl</kbd> \u4ee3\u7801\u5757\u540e\u8ddf\u8bed\u8a00\u4ee5\u4f7f\u7528\u4ee3\u7801\u9ad8\u4eae\u3002\u6309\u952e Ctrl 1 2 3 4 5 ```rust fn main() { println!(\"Hello World!\"); } ``` 1 2 3 fn main () { println! ( \"Hello World!\" ); } pygments \u652f\u6301 434 \u79cd\u8bed\u8a00\u7684\u9ad8\u4eae\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u4eec\u3002 \u5217\u8868 \u2693\ufe0e \u65e0\u5e8f\u5217\u8868 1 2 3 4 * Item 1 * Item 2 * Item 2a * Item 2b \u6709\u5e8f\u5217\u8868\uff0c\u70b9\u53f7\u4e0e\u6587\u672c\u95f4\u9700\u8981\u52a0\u7a7a\u683c\u3002\u53ef\u4ee5\u5168\u5199 1 \u6765\u81ea\u52a8\u7f16\u53f7\u3002 1 2 3 4 5 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b \u4efb\u52a1\u5217\u8868\uff0c\u6ce8\u610f\u7f29\u8fdb\u7a7a\u683c\u662f 4 \u4e2a\u3002 1 2 3 4 - [x] Item 1 - [ ] Item 2 - [ ] Item 2a - [x] Item 2b Item 1 Item 2 Item 2a Item 2b \u56fe\u7247\u4e0e\u94fe\u63a5 \u2693\ufe0e 1 2 \u56fe\u7247 ![](\u56fe\u7247\u94fe\u63a5\u5730\u5740) \u94fe\u63a5 [ \u94fe\u63a5\u6587\u5b57 ]( \u94fe\u63a5\u5730\u5740 ) \u6587\u6863\u4e4b\u95f4\u7684\u4ea4\u53c9\u94fe\u63a5\uff0c\u586b\u76f8\u5bf9\u5730\u5740\u3002 LaTeX \u516c\u5f0f \u2693\ufe0e \u5f88\u591a\u540c\u5b66\u5e94\u8be5\u4f1a\u4f7f\u7528 \\(\\rm\\LaTeX\\) \uff0c\u56e0\u6b64\u6211\u542f\u7528\u4e86 MathJax \u6269\u5c55\uff0c\u53ef\u4ee5\u5728\u6587\u7ae0\u4e2d\u7a7f\u63d2\u516c\u5f0f\u3002\u6bd4\u5982 \\(a^2+b^2=c^2\\) \uff0c \\[\\sum_{n=1}^\\infty \\frac{1}{n^2} = \\frac{\\pi^2}{6}\\] 1 2 3 \u6bd4\u5982 $ a^ 2 + b^ 2 = c^ 2 $ \uff0c $$ \\sum _{n = 1 }^ \\infty \\frac { 1 }{n^ 2 } = \\frac { \\pi ^ 2 }{ 6 } $$ \u6df1\u5165 \\(\\rm\\LaTeX\\) \u8d85\u51fa\u4e86\u6211\u4eec\u7684\u8ba8\u8bba\u8303\u56f4\uff0c\u8bf7\u60a8\u81ea\u884c\u4e86\u89e3\u3002 \u8868\u683c \u2693\ufe0e \u5192\u53f7\u5728\u54ea\u8fb9\u8868\u793a\u5411\u54ea\u8fb9\u5bf9\u9f50\uff0c\u9ed8\u8ba4\u662f\u5de6\u5bf9\u9f50\uff0c\u4e24\u8fb9\u90fd\u6709\u5219\u5c45\u4e2d\u3002 1 2 3 4 5 | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 \u811a\u6ce8 \u2693\ufe0e 1 2 3 \u811a\u6ce8 [^1] \u4f1a\u81ea\u52a8\u653e\u5230\u6587\u672b\u3002 [ ^1 ]: footnote\uff0c\u811a\u6ce8 \u811a\u6ce8 1 \u4f1a\u81ea\u52a8\u653e\u5230\u6587\u672b\u3002 \u8f6c\u4e49 \u2693\ufe0e \u590d\u6742\u7684\u683c\u5f0f\u81ea\u7136\u4f1a\u6709\u8f6c\u4e49\uff0c\u5982\u4e0b\u7279\u6b8a\u5b57\u7b26\u9700\u8981\u901a\u8fc7\u524d\u52a0 \\ \u8f6c\u4e49\u3002\u6709\u4e9b\u65f6\u5019\u4e0d\u52a0\u4e5f\u53ef\u4ee5 1 2 3 4 5 6 7 8 9 10 11 12 \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark footnote\uff0c\u811a\u6ce8 \u21a9","title":"Markdown"},{"location":"other/markdown/#markdown-\u4ecb\u7ecd","text":"\u6211\u63a8\u8350 Markdown\uff0c\u56e0\u4e3a\u5b83\u8db3\u591f\u6d41\u884c\uff0c\u8db3\u591f\u7b80\u5355\u3002 \u672c\u6587\u8bb2\u4ecb\u7ecd\u4e00\u4e9b Markdown \u7684\u57fa\u7840\u6587\u6cd5\uff0cMkDocs \u72ec\u6709\u7684\u7279\u6027\u8bf7\u9605\u8bfb MkDocs \u3002 \u66f4\u8be6\u7ec6\u7684\u8bf7\u9605\u8bfb Cyent \u3002","title":"Markdown \u4ecb\u7ecd"},{"location":"other/markdown/#markdown-\u9002\u5408","text":"Markdown \u662f HTML \u7684\u7b80\u5355\u66ff\u4ee3\uff0c\u662f\u4e00\u4e2a\u7eaf\u6587\u672c\u6587\u4ef6\u3002\u5b83\u9002\u5408\u4e8e\u64b0\u5199\u7f51\u7edc\u6587\u7ae0\uff0c\u901a\u5e38\u8fd9\u4e9b\u6587\u7ae0\u53ea\u9700\u8981\u5f88\u5c11\u7684\u683c\u5f0f\u3002 Markdown \u4e0d\u9002\u5408\u505a\u590d\u6742\u7684\u6392\u7248\u5de5\u4f5c\uff0c\u5b83\u4e0d\u80fd\u7cbe\u786e\u7684\u63a7\u5236\u6587\u672c\u7684\u6837\u5f0f\u3002","title":"Markdown \u9002\u5408"},{"location":"other/markdown/#\u7f16\u8f91\u5668","text":"\u652f\u6301 Markdown \u7684\u7f16\u8f91\u5668\u5f88\u591a\u3002\u6211\u63a8\u8350 VSCode \uff0c\u5b83\u662f\u4e00\u4e2a\u901a\u7528\u800c\u5f3a\u5927\u7684\u7f16\u8f91\u5668\uff0c\u6216\u8005\u5c1d\u8bd5 Typora \uff0c\u5b83\u4e00\u4e2a\u6240\u89c1\u5373\u6240\u5f97\u7684 Markdown \u7f16\u8f91\u5668\u3002 \u6216\u8005\u4f60\u4e0d\u613f\u610f\u4e0b\u8f7d\uff0c\u4f60\u53ef\u4ee5\u5728\u7ebf\u5c1d\u8bd5 CMD \u4f5c\u4e1a\u90e8\u843d \u3002","title":"\u7f16\u8f91\u5668"},{"location":"other/markdown/#\u6807\u9898\u4e0e\u6bb5\u843d","text":"\u6807\u9898\u4f7f\u7528 # \u7b26\u53f7\uff0c\u7a7a\u683c\u540e\u63a5\u6587\u672c\u3002 1 2 3 4 5 6 7 8 # \u4e00\u7ea7\u6807\u9898 ## \u4e8c\u7ea7\u6807\u9898 ### \u4e09\u7ea7\u6807\u9898 #### \u56db\u7ea7\u6807\u9898 ##### \u4e94\u7ea7\u6807\u9898 ###### \u516d\u7ea7\u6807\u9898 \u666e\u901a\u6bb5\u843d\u3002 \u666e\u901a\u6bb5\u843d\uff0c\u6bcf\u4e24\u6bb5\u4e4b\u95f4\u7a7a\u4e00\u884c\u3002 1 2 3 4 \u5176\u5b83\u683c\u5f0f\u6709 **\u7c97\u4f53** \u548c *\u659c\u4f53* \uff0c \u6bb5\u95f4\u8bb0\u5f97\u7a7a\u884c\uff0c\u5426\u5219\u4e0d\u4f1a\u6362\u884c\u7684\u3002 \u8fd8\u6709 <u>\u4e0b\u5212\u7ebf</u> \u548c <del>\u5220\u9664\u7ebf</del>\uff0c\u548c ==\u9ad8\u4eae== \u3002 \u5176\u5b83\u683c\u5f0f\u6709 \u7c97\u4f53 \u548c \u659c\u4f53 \uff0c \u6bb5\u95f4\u8bb0\u5f97\u7a7a\u884c\uff0c\u5426\u5219\u4e0d\u4f1a\u6362\u884c\u7684\u3002 \u8fd8\u6709 \u4e0b\u5212\u7ebf \u548c \u5220\u9664\u7ebf \uff0c\u548c \u9ad8\u4eae \u3002","title":"\u6807\u9898\u4e0e\u6bb5\u843d"},{"location":"other/markdown/#\u5f15\u7528","text":"1 2 3 > \u8fd9\u91cc\u662f\u5f15\u7528 > > > \u4e8c\u7ea7\u5f15\u7528\u3002","title":"\u5f15\u7528"},{"location":"other/markdown/#\u4ee3\u7801","text":"1 \u5185\u8054\u4ee3\u7801 `var example = true` \uff0c\u6309\u952e <kbd>Ctrl</kbd> \u4ee3\u7801\u5757\u540e\u8ddf\u8bed\u8a00\u4ee5\u4f7f\u7528\u4ee3\u7801\u9ad8\u4eae\u3002\u6309\u952e Ctrl 1 2 3 4 5 ```rust fn main() { println!(\"Hello World!\"); } ``` 1 2 3 fn main () { println! ( \"Hello World!\" ); } pygments \u652f\u6301 434 \u79cd\u8bed\u8a00\u7684\u9ad8\u4eae\uff0c\u4f60\u53ef\u4ee5\u5728 \u8fd9\u91cc \u627e\u5230\u5b83\u4eec\u3002","title":"\u4ee3\u7801"},{"location":"other/markdown/#\u5217\u8868","text":"\u65e0\u5e8f\u5217\u8868 1 2 3 4 * Item 1 * Item 2 * Item 2a * Item 2b \u6709\u5e8f\u5217\u8868\uff0c\u70b9\u53f7\u4e0e\u6587\u672c\u95f4\u9700\u8981\u52a0\u7a7a\u683c\u3002\u53ef\u4ee5\u5168\u5199 1 \u6765\u81ea\u52a8\u7f16\u53f7\u3002 1 2 3 4 5 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b \u4efb\u52a1\u5217\u8868\uff0c\u6ce8\u610f\u7f29\u8fdb\u7a7a\u683c\u662f 4 \u4e2a\u3002 1 2 3 4 - [x] Item 1 - [ ] Item 2 - [ ] Item 2a - [x] Item 2b Item 1 Item 2 Item 2a Item 2b","title":"\u5217\u8868"},{"location":"other/markdown/#\u56fe\u7247\u4e0e\u94fe\u63a5","text":"1 2 \u56fe\u7247 ![](\u56fe\u7247\u94fe\u63a5\u5730\u5740) \u94fe\u63a5 [ \u94fe\u63a5\u6587\u5b57 ]( \u94fe\u63a5\u5730\u5740 ) \u6587\u6863\u4e4b\u95f4\u7684\u4ea4\u53c9\u94fe\u63a5\uff0c\u586b\u76f8\u5bf9\u5730\u5740\u3002","title":"\u56fe\u7247\u4e0e\u94fe\u63a5"},{"location":"other/markdown/#latex-\u516c\u5f0f","text":"\u5f88\u591a\u540c\u5b66\u5e94\u8be5\u4f1a\u4f7f\u7528 \\(\\rm\\LaTeX\\) \uff0c\u56e0\u6b64\u6211\u542f\u7528\u4e86 MathJax \u6269\u5c55\uff0c\u53ef\u4ee5\u5728\u6587\u7ae0\u4e2d\u7a7f\u63d2\u516c\u5f0f\u3002\u6bd4\u5982 \\(a^2+b^2=c^2\\) \uff0c \\[\\sum_{n=1}^\\infty \\frac{1}{n^2} = \\frac{\\pi^2}{6}\\] 1 2 3 \u6bd4\u5982 $ a^ 2 + b^ 2 = c^ 2 $ \uff0c $$ \\sum _{n = 1 }^ \\infty \\frac { 1 }{n^ 2 } = \\frac { \\pi ^ 2 }{ 6 } $$ \u6df1\u5165 \\(\\rm\\LaTeX\\) \u8d85\u51fa\u4e86\u6211\u4eec\u7684\u8ba8\u8bba\u8303\u56f4\uff0c\u8bf7\u60a8\u81ea\u884c\u4e86\u89e3\u3002","title":"LaTeX \u516c\u5f0f"},{"location":"other/markdown/#\u8868\u683c","text":"\u5192\u53f7\u5728\u54ea\u8fb9\u8868\u793a\u5411\u54ea\u8fb9\u5bf9\u9f50\uff0c\u9ed8\u8ba4\u662f\u5de6\u5bf9\u9f50\uff0c\u4e24\u8fb9\u90fd\u6709\u5219\u5c45\u4e2d\u3002 1 2 3 4 5 | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1","title":"\u8868\u683c"},{"location":"other/markdown/#\u811a\u6ce8","text":"1 2 3 \u811a\u6ce8 [^1] \u4f1a\u81ea\u52a8\u653e\u5230\u6587\u672b\u3002 [ ^1 ]: footnote\uff0c\u811a\u6ce8 \u811a\u6ce8 1 \u4f1a\u81ea\u52a8\u653e\u5230\u6587\u672b\u3002","title":"\u811a\u6ce8"},{"location":"other/markdown/#\u8f6c\u4e49","text":"\u590d\u6742\u7684\u683c\u5f0f\u81ea\u7136\u4f1a\u6709\u8f6c\u4e49\uff0c\u5982\u4e0b\u7279\u6b8a\u5b57\u7b26\u9700\u8981\u901a\u8fc7\u524d\u52a0 \\ \u8f6c\u4e49\u3002\u6709\u4e9b\u65f6\u5019\u4e0d\u52a0\u4e5f\u53ef\u4ee5 1 2 3 4 5 6 7 8 9 10 11 12 \\ backslash ` backtick * asterisk _ underscore {} curly braces [] square brackets () parentheses # hash mark + plus sign - minus sign (hyphen) . dot ! exclamation mark footnote\uff0c\u811a\u6ce8 \u21a9","title":"\u8f6c\u4e49"},{"location":"other/mkdocs/","text":"MkDocs \u2693\ufe0e \u6211\u5f00\u59cb\u4f7f\u7528\u7684\u662f MdBook \uff0c\u56e0\u4e3a\u7f3a\u5931\u4e00\u4e9b\u91cd\u8981\u7684\u529f\u80fd\uff0c\u4e0d\u5f97\u4e0d\u6362\u5230\u4e86 MkDocs \u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b MkDocs \u7279\u6709\u7684\u683c\u5f0f\u3002 \u66f4\u8be6\u7ec6\u7684\u8bf7\u9605\u8bfb Cyent \u3002 \u8b66\u544a\u6846 \u2693\ufe0e 1 2 3 4 5 !!! warning \"\u8b66\u544a\" \u6837\u5f0f\u6709 \uff1a `octicons` `abstract` `info` `tip` `success` `example` `question` `warning` `failure` `danger` `bug` `quote` !!! warning \"\" \u65e0\u6807\u9898\u5f0f \u8b66\u544a \u6837\u5f0f\u6709 \uff1a octicons abstract info tip success example question warning failure danger bug quote \u65e0\u6807\u9898\u5f0f \u8b66\u544a\u6846\u7684\u5f62\u5f0f\u5f88\u4e30\u5bcc\uff0c\u66f4\u591a\u79cd\u7c7b\u7684\u793a\u4f8b\u89c1 Admonitions \u3002 \u6298\u53e0\u5757 \u2693\ufe0e 1 2 3 4 5 ??? bug \"\u6298\u53e0\" \u6298\u53e0 ???+ bug \"\u5c55\u5f00\" \u5c55\u5f00 \u6298\u53e0 \u6298\u53e0 \u5c55\u5f00 \u5c55\u5f00 \u4ee3\u7801\u5757 \u2693\ufe0e \u4ee3\u7801\u5757\u652f\u6301\u80cc\u666f\u9ad8\u4eae\uff0c\u652f\u6301\u66f4\u6539\u4ee3\u7801\u8d77\u59cb\u884c\u53f7\u3002 1 2 3 4 5 6 7 ```python hl_lines=\"2 3\" linenums=\"2\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 2 3 4 5 6 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] \u6807\u7b7e\u9875 \u2693\ufe0e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` === \"Haskell\" \u5077\u5077\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\uff1a\uff09 C 1 2 3 4 5 6 #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ 1 2 3 4 5 6 #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Haskell \u5077\u5077\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\uff1a\uff09 \u6587\u672c\u6837\u5f0f \u2693\ufe0e \u989d\u5916\u7684\u6587\u672c\u6837\u5f0f\uff0c\u6709\u9700\u8981\u8bf7\u76f4\u63a5\u67e5\u9605 Formatting \u3002","title":"MkDocs"},{"location":"other/mkdocs/#mkdocs","text":"\u6211\u5f00\u59cb\u4f7f\u7528\u7684\u662f MdBook \uff0c\u56e0\u4e3a\u7f3a\u5931\u4e00\u4e9b\u91cd\u8981\u7684\u529f\u80fd\uff0c\u4e0d\u5f97\u4e0d\u6362\u5230\u4e86 MkDocs \u3002 \u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b MkDocs \u7279\u6709\u7684\u683c\u5f0f\u3002 \u66f4\u8be6\u7ec6\u7684\u8bf7\u9605\u8bfb Cyent \u3002","title":"MkDocs"},{"location":"other/mkdocs/#\u8b66\u544a\u6846","text":"1 2 3 4 5 !!! warning \"\u8b66\u544a\" \u6837\u5f0f\u6709 \uff1a `octicons` `abstract` `info` `tip` `success` `example` `question` `warning` `failure` `danger` `bug` `quote` !!! warning \"\" \u65e0\u6807\u9898\u5f0f \u8b66\u544a \u6837\u5f0f\u6709 \uff1a octicons abstract info tip success example question warning failure danger bug quote \u65e0\u6807\u9898\u5f0f \u8b66\u544a\u6846\u7684\u5f62\u5f0f\u5f88\u4e30\u5bcc\uff0c\u66f4\u591a\u79cd\u7c7b\u7684\u793a\u4f8b\u89c1 Admonitions \u3002","title":"\u8b66\u544a\u6846"},{"location":"other/mkdocs/#\u6298\u53e0\u5757","text":"1 2 3 4 5 ??? bug \"\u6298\u53e0\" \u6298\u53e0 ???+ bug \"\u5c55\u5f00\" \u5c55\u5f00 \u6298\u53e0 \u6298\u53e0 \u5c55\u5f00 \u5c55\u5f00","title":"\u6298\u53e0\u5757"},{"location":"other/mkdocs/#\u4ee3\u7801\u5757","text":"\u4ee3\u7801\u5757\u652f\u6301\u80cc\u666f\u9ad8\u4eae\uff0c\u652f\u6301\u66f4\u6539\u4ee3\u7801\u8d77\u59cb\u884c\u53f7\u3002 1 2 3 4 5 6 7 ```python hl_lines=\"2 3\" linenums=\"2\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] > items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` 2 3 4 5 6 def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]","title":"\u4ee3\u7801\u5757"},{"location":"other/mkdocs/#\u6807\u7b7e\u9875","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 === \"C\" ``` c #include <stdio.h> int main(void) { printf(\"Hello world!\\n\"); return 0; } ``` === \"C++\" ``` c++ #include <iostream> int main(void) { std::cout << \"Hello world!\" << std::endl; return 0; } ``` === \"Haskell\" \u5077\u5077\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\uff1a\uff09 C 1 2 3 4 5 6 #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ 1 2 3 4 5 6 #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Haskell \u5077\u5077\u544a\u8bc9\u4f60\u6211\u4e0d\u4f1a\uff1a\uff09","title":"\u6807\u7b7e\u9875"},{"location":"other/mkdocs/#\u6587\u672c\u6837\u5f0f","text":"\u989d\u5916\u7684\u6587\u672c\u6837\u5f0f\uff0c\u6709\u9700\u8981\u8bf7\u76f4\u63a5\u67e5\u9605 Formatting \u3002","title":"\u6587\u672c\u6837\u5f0f"}]}